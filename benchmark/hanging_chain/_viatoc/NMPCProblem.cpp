#include "NMPCProblem.h"
#include "solver.h"

NMPCProblem::NMPCProblem()
{
    this->numStates = 21;
    this->numLinearStates = 0;
    this->numControls = 3;
    this->numParameters = 0;
    this->numObjectiveStates = 15;
    this->numObjectiveEndStates = 3;
    this->numSteps = 40;
    this->dt = 0.2;

    this->solver = new Solver(this);

    this->x = new REAL_TYPE [this->numStates*(this->numSteps+1)];
    this->u = new REAL_TYPE [this->numControls*this->numSteps];
    this->x_ref = new REAL_TYPE [this->numStates*this->numSteps];
    this->u_ref = new REAL_TYPE [this->numControls*this->numSteps];
    this->h_ref = new REAL_TYPE [this->numObjectiveStates*this->numSteps];
    this->h_ref_end = new REAL_TYPE [this->numObjectiveEndStates];
    this->p = new REAL_TYPE [this->numParameters];

    this->A_all = new REAL_TYPE [this->numStates*this->numStates*this->numSteps];
    this->B_all = new REAL_TYPE [this->numStates*this->numControls*this->numSteps];

    this->Q = 0;
    this->R = 0;
    this->P = 0;
    this->S = 0;
    this->S_END = 0;

    this->xMin = new REAL_TYPE [this->numStates];
    this->xMax = new REAL_TYPE [this->numStates];
    this->uMin = new REAL_TYPE [this->numControls];
    this->uMax = new REAL_TYPE [this->numControls];

    this->xMin[0] = -1.79769e+308;
    this->xMax[0] = 1.79769e+308;
    this->xMin[1] = -1.79769e+308;
    this->xMax[1] = 1.79769e+308;
    this->xMin[2] = -1.79769e+308;
    this->xMax[2] = 1.79769e+308;
    this->xMin[3] = -1.79769e+308;
    this->xMax[3] = 1.79769e+308;
    this->xMin[4] = -1.79769e+308;
    this->xMax[4] = 1.79769e+308;
    this->xMin[5] = -1.79769e+308;
    this->xMax[5] = 1.79769e+308;
    this->xMin[6] = -1.79769e+308;
    this->xMax[6] = 1.79769e+308;
    this->xMin[7] = -1.79769e+308;
    this->xMax[7] = 1.79769e+308;
    this->xMin[8] = -1.79769e+308;
    this->xMax[8] = 1.79769e+308;
    this->xMin[9] = -1.79769e+308;
    this->xMax[9] = 1.79769e+308;
    this->xMin[10] = -1.79769e+308;
    this->xMax[10] = 1.79769e+308;
    this->xMin[11] = -1.79769e+308;
    this->xMax[11] = 1.79769e+308;
    this->xMin[12] = -1.79769e+308;
    this->xMax[12] = 1.79769e+308;
    this->xMin[13] = -1.79769e+308;
    this->xMax[13] = 1.79769e+308;
    this->xMin[14] = -1.79769e+308;
    this->xMax[14] = 1.79769e+308;
    this->xMin[15] = -1.79769e+308;
    this->xMax[15] = 1.79769e+308;
    this->xMin[16] = -1.79769e+308;
    this->xMax[16] = 1.79769e+308;
    this->xMin[17] = -1.79769e+308;
    this->xMax[17] = 1.79769e+308;
    this->xMin[18] = -1.79769e+308;
    this->xMax[18] = 1.79769e+308;
    this->xMin[19] = -1.79769e+308;
    this->xMax[19] = 1.79769e+308;
    this->xMin[20] = -1.79769e+308;
    this->xMax[20] = 1.79769e+308;

    this->uMin[0] = -1;
    this->uMax[0] = 1;
    this->uMin[1] = -1;
    this->uMax[1] = 1;
    this->uMin[2] = -1;
    this->uMax[2] = 1;

    initializeIntegrator();

}

NMPCProblem::~NMPCProblem()
{
    delete this->solver;
    delete[] this->x;
    delete[] this->u;
    delete[] this->x_ref;
    delete[] this->u_ref;
    delete[] this->h_ref;
    delete[] this->h_ref_end;
    delete[] this->p;
    delete[] this->A_all;
    delete[] this->B_all;
    delete[] this->Q;
    delete[] this->R;
    delete[] this->P;
    delete[] this->S;
    delete[] this->S_END;
    delete[] this->xMin;
    delete[] this->xMax;
    delete[] this->uMin;
    delete[] this->uMax;
    delete[] ALin;
    delete[] ATemp;
    delete[] BLin;
    delete[] BTemp;
    delete[] MTemp;
    delete[] xTemp;
    delete[] k1;
    delete[] dk1_dx;
    delete[] dk1_du;
    delete[] k2;
    delete[] dk2_dx;
    delete[] dk2_du;
    delete[] k3;
    delete[] dk3_dx;
    delete[] dk3_du;
    delete[] k4;
    delete[] dk4_dx;
    delete[] dk4_du;
}
void NMPCProblem::evaluateDynamics(REAL_TYPE *value, REAL_TYPE *x, REAL_TYPE *u)
{
    REAL_TYPE u_0 = u[0];
    REAL_TYPE u_1 = u[1];
    REAL_TYPE u_2 = u[2];
    REAL_TYPE x_0 = x[0];
    REAL_TYPE x_1 = x[1];
    REAL_TYPE x_2 = x[2];
    REAL_TYPE x_3 = x[3];
    REAL_TYPE x_4 = x[4];
    REAL_TYPE x_5 = x[5];
    REAL_TYPE x_6 = x[6];
    REAL_TYPE x_7 = x[7];
    REAL_TYPE x_8 = x[8];
    REAL_TYPE x_9 = x[9];
    REAL_TYPE x_10 = x[10];
    REAL_TYPE x_11 = x[11];
    REAL_TYPE x_12 = x[12];
    REAL_TYPE x_13 = x[13];
    REAL_TYPE x_14 = x[14];
    REAL_TYPE x_15 = x[15];
    REAL_TYPE x_16 = x[16];
    REAL_TYPE x_17 = x[17];
    REAL_TYPE x_18 = x[18];
    REAL_TYPE x_19 = x[19];
    REAL_TYPE x_20 = x[20];


    value[0] = x_12;
    value[1] = x_13;
    value[2] = x_14;
    value[3] = x_15;
    value[4] = x_16;
    value[5] = x_17;
    value[6] = x_18;
    value[7] = x_19;
    value[8] = x_20;
    value[9] = u_0;
    value[10] = u_1;
    value[11] = u_2;
    value[12] = (8.88889 * (((-0.1 * (4 - (0.55 / sqrt((((x_0 * x_0) + (x_1 * x_1)) + (x_2 * x_2)))))) * x_0) + ((0.1 * (4 - (0.55 / sqrt(((((x_0 - x_3) * (x_0 - x_3)) + ((x_1 - x_4) * (x_1 - x_4))) + ((x_2 - x_5) * (x_2 - x_5))))))) * ( (-x_0) + x_3))));
    value[13] = (8.88889 * (((-0.1 * (4 - (0.55 / sqrt((((x_0 * x_0) + (x_1 * x_1)) + (x_2 * x_2)))))) * x_1) + ((0.1 * (4 - (0.55 / sqrt(((((x_0 - x_3) * (x_0 - x_3)) + ((x_1 - x_4) * (x_1 - x_4))) + ((x_2 - x_5) * (x_2 - x_5))))))) * ( (-x_1) + x_4))));
    value[14] = (-9.81 + (8.88889 * (((-0.1 * (4 - (0.55 / sqrt((((x_0 * x_0) + (x_1 * x_1)) + (x_2 * x_2)))))) * x_2) + ((0.1 * (4 - (0.55 / sqrt(((((x_0 - x_3) * (x_0 - x_3)) + ((x_1 - x_4) * (x_1 - x_4))) + ((x_2 - x_5) * (x_2 - x_5))))))) * ( (-x_2) + x_5)))));
    value[15] = (8.88889 * (((-0.1 * (4 - (0.55 / sqrt(((((x_0 - x_3) * (x_0 - x_3)) + ((x_1 - x_4) * (x_1 - x_4))) + ((x_2 - x_5) * (x_2 - x_5))))))) * ( (-x_0) + x_3)) + ((0.1 * (4 - (0.55 / sqrt(((((x_3 - x_6) * (x_3 - x_6)) + ((x_4 - x_7) * (x_4 - x_7))) + ((x_5 - x_8) * (x_5 - x_8))))))) * ( (-x_3) + x_6))));
    value[16] = (8.88889 * (((-0.1 * (4 - (0.55 / sqrt(((((x_0 - x_3) * (x_0 - x_3)) + ((x_1 - x_4) * (x_1 - x_4))) + ((x_2 - x_5) * (x_2 - x_5))))))) * ( (-x_1) + x_4)) + ((0.1 * (4 - (0.55 / sqrt(((((x_3 - x_6) * (x_3 - x_6)) + ((x_4 - x_7) * (x_4 - x_7))) + ((x_5 - x_8) * (x_5 - x_8))))))) * ( (-x_4) + x_7))));
    value[17] = (-9.81 + (8.88889 * (((-0.1 * (4 - (0.55 / sqrt(((((x_0 - x_3) * (x_0 - x_3)) + ((x_1 - x_4) * (x_1 - x_4))) + ((x_2 - x_5) * (x_2 - x_5))))))) * ( (-x_2) + x_5)) + ((0.1 * (4 - (0.55 / sqrt(((((x_3 - x_6) * (x_3 - x_6)) + ((x_4 - x_7) * (x_4 - x_7))) + ((x_5 - x_8) * (x_5 - x_8))))))) * ( (-x_5) + x_8)))));
    value[18] = (8.88889 * (((-0.1 * (4 - (0.55 / sqrt(((((x_3 - x_6) * (x_3 - x_6)) + ((x_4 - x_7) * (x_4 - x_7))) + ((x_5 - x_8) * (x_5 - x_8))))))) * ( (-x_3) + x_6)) + ((0.1 * (4 - (0.55 / sqrt(((((x_6 - x_9) * (x_6 - x_9)) + ((x_7 - x_10) * (x_7 - x_10))) + ((x_8 - x_11) * (x_8 - x_11))))))) * ( (-x_6) + x_9))));
    value[19] = (8.88889 * (((-0.1 * (4 - (0.55 / sqrt(((((x_3 - x_6) * (x_3 - x_6)) + ((x_4 - x_7) * (x_4 - x_7))) + ((x_5 - x_8) * (x_5 - x_8))))))) * ( (-x_4) + x_7)) + ((0.1 * (4 - (0.55 / sqrt(((((x_6 - x_9) * (x_6 - x_9)) + ((x_7 - x_10) * (x_7 - x_10))) + ((x_8 - x_11) * (x_8 - x_11))))))) * ( (-x_7) + x_10))));
    value[20] = (-9.81 + (8.88889 * (((-0.1 * (4 - (0.55 / sqrt(((((x_3 - x_6) * (x_3 - x_6)) + ((x_4 - x_7) * (x_4 - x_7))) + ((x_5 - x_8) * (x_5 - x_8))))))) * ( (-x_5) + x_8)) + ((0.1 * (4 - (0.55 / sqrt(((((x_6 - x_9) * (x_6 - x_9)) + ((x_7 - x_10) * (x_7 - x_10))) + ((x_8 - x_11) * (x_8 - x_11))))))) * ( (-x_8) + x_11)))));
}

void NMPCProblem::evaluateDynamicsAndDerivatives(REAL_TYPE *value, REAL_TYPE *df_dx, REAL_TYPE *df_du, REAL_TYPE *x, REAL_TYPE *u)
{
    REAL_TYPE u_0 = u[0];
    REAL_TYPE u_1 = u[1];
    REAL_TYPE u_2 = u[2];
    REAL_TYPE x_0 = x[0];
    REAL_TYPE x_1 = x[1];
    REAL_TYPE x_2 = x[2];
    REAL_TYPE x_3 = x[3];
    REAL_TYPE x_4 = x[4];
    REAL_TYPE x_5 = x[5];
    REAL_TYPE x_6 = x[6];
    REAL_TYPE x_7 = x[7];
    REAL_TYPE x_8 = x[8];
    REAL_TYPE x_9 = x[9];
    REAL_TYPE x_10 = x[10];
    REAL_TYPE x_11 = x[11];
    REAL_TYPE x_12 = x[12];
    REAL_TYPE x_13 = x[13];
    REAL_TYPE x_14 = x[14];
    REAL_TYPE x_15 = x[15];
    REAL_TYPE x_16 = x[16];
    REAL_TYPE x_17 = x[17];
    REAL_TYPE x_18 = x[18];
    REAL_TYPE x_19 = x[19];
    REAL_TYPE x_20 = x[20];



    value[0] = x_12;
    value[1] = x_13;
    value[2] = x_14;
    value[3] = x_15;
    value[4] = x_16;
    value[5] = x_17;
    value[6] = x_18;
    value[7] = x_19;
    value[8] = x_20;
    value[9] = u_0;
    value[10] = u_1;
    value[11] = u_2;
    value[12] = (8.88889 * (((-0.1 * (4 - (0.55 / sqrt((((x_0 * x_0) + (x_1 * x_1)) + (x_2 * x_2)))))) * x_0) + ((0.1 * (4 - (0.55 / sqrt(((((x_0 - x_3) * (x_0 - x_3)) + ((x_1 - x_4) * (x_1 - x_4))) + ((x_2 - x_5) * (x_2 - x_5))))))) * ( (-x_0) + x_3))));
    value[13] = (8.88889 * (((-0.1 * (4 - (0.55 / sqrt((((x_0 * x_0) + (x_1 * x_1)) + (x_2 * x_2)))))) * x_1) + ((0.1 * (4 - (0.55 / sqrt(((((x_0 - x_3) * (x_0 - x_3)) + ((x_1 - x_4) * (x_1 - x_4))) + ((x_2 - x_5) * (x_2 - x_5))))))) * ( (-x_1) + x_4))));
    value[14] = (-9.81 + (8.88889 * (((-0.1 * (4 - (0.55 / sqrt((((x_0 * x_0) + (x_1 * x_1)) + (x_2 * x_2)))))) * x_2) + ((0.1 * (4 - (0.55 / sqrt(((((x_0 - x_3) * (x_0 - x_3)) + ((x_1 - x_4) * (x_1 - x_4))) + ((x_2 - x_5) * (x_2 - x_5))))))) * ( (-x_2) + x_5)))));
    value[15] = (8.88889 * (((-0.1 * (4 - (0.55 / sqrt(((((x_0 - x_3) * (x_0 - x_3)) + ((x_1 - x_4) * (x_1 - x_4))) + ((x_2 - x_5) * (x_2 - x_5))))))) * ( (-x_0) + x_3)) + ((0.1 * (4 - (0.55 / sqrt(((((x_3 - x_6) * (x_3 - x_6)) + ((x_4 - x_7) * (x_4 - x_7))) + ((x_5 - x_8) * (x_5 - x_8))))))) * ( (-x_3) + x_6))));
    value[16] = (8.88889 * (((-0.1 * (4 - (0.55 / sqrt(((((x_0 - x_3) * (x_0 - x_3)) + ((x_1 - x_4) * (x_1 - x_4))) + ((x_2 - x_5) * (x_2 - x_5))))))) * ( (-x_1) + x_4)) + ((0.1 * (4 - (0.55 / sqrt(((((x_3 - x_6) * (x_3 - x_6)) + ((x_4 - x_7) * (x_4 - x_7))) + ((x_5 - x_8) * (x_5 - x_8))))))) * ( (-x_4) + x_7))));
    value[17] = (-9.81 + (8.88889 * (((-0.1 * (4 - (0.55 / sqrt(((((x_0 - x_3) * (x_0 - x_3)) + ((x_1 - x_4) * (x_1 - x_4))) + ((x_2 - x_5) * (x_2 - x_5))))))) * ( (-x_2) + x_5)) + ((0.1 * (4 - (0.55 / sqrt(((((x_3 - x_6) * (x_3 - x_6)) + ((x_4 - x_7) * (x_4 - x_7))) + ((x_5 - x_8) * (x_5 - x_8))))))) * ( (-x_5) + x_8)))));
    value[18] = (8.88889 * (((-0.1 * (4 - (0.55 / sqrt(((((x_3 - x_6) * (x_3 - x_6)) + ((x_4 - x_7) * (x_4 - x_7))) + ((x_5 - x_8) * (x_5 - x_8))))))) * ( (-x_3) + x_6)) + ((0.1 * (4 - (0.55 / sqrt(((((x_6 - x_9) * (x_6 - x_9)) + ((x_7 - x_10) * (x_7 - x_10))) + ((x_8 - x_11) * (x_8 - x_11))))))) * ( (-x_6) + x_9))));
    value[19] = (8.88889 * (((-0.1 * (4 - (0.55 / sqrt(((((x_3 - x_6) * (x_3 - x_6)) + ((x_4 - x_7) * (x_4 - x_7))) + ((x_5 - x_8) * (x_5 - x_8))))))) * ( (-x_4) + x_7)) + ((0.1 * (4 - (0.55 / sqrt(((((x_6 - x_9) * (x_6 - x_9)) + ((x_7 - x_10) * (x_7 - x_10))) + ((x_8 - x_11) * (x_8 - x_11))))))) * ( (-x_7) + x_10))));
    value[20] = (-9.81 + (8.88889 * (((-0.1 * (4 - (0.55 / sqrt(((((x_3 - x_6) * (x_3 - x_6)) + ((x_4 - x_7) * (x_4 - x_7))) + ((x_5 - x_8) * (x_5 - x_8))))))) * ( (-x_5) + x_8)) + ((0.1 * (4 - (0.55 / sqrt(((((x_6 - x_9) * (x_6 - x_9)) + ((x_7 - x_10) * (x_7 - x_10))) + ((x_8 - x_11) * (x_8 - x_11))))))) * ( (-x_8) + x_11)))));

    df_dx[0] = 0;
    df_dx[1] = 0;
    df_dx[2] = 0;
    df_dx[3] = 0;
    df_dx[4] = 0;
    df_dx[5] = 0;
    df_dx[6] = 0;
    df_dx[7] = 0;
    df_dx[8] = 0;
    df_dx[9] = 0;
    df_dx[10] = 0;
    df_dx[11] = 0;
    df_dx[12] = 1;
    df_dx[13] = 0;
    df_dx[14] = 0;
    df_dx[15] = 0;
    df_dx[16] = 0;
    df_dx[17] = 0;
    df_dx[18] = 0;
    df_dx[19] = 0;
    df_dx[20] = 0;
    df_dx[21] = 0;
    df_dx[22] = 0;
    df_dx[23] = 0;
    df_dx[24] = 0;
    df_dx[25] = 0;
    df_dx[26] = 0;
    df_dx[27] = 0;
    df_dx[28] = 0;
    df_dx[29] = 0;
    df_dx[30] = 0;
    df_dx[31] = 0;
    df_dx[32] = 0;
    df_dx[33] = 0;
    df_dx[34] = 1;
    df_dx[35] = 0;
    df_dx[36] = 0;
    df_dx[37] = 0;
    df_dx[38] = 0;
    df_dx[39] = 0;
    df_dx[40] = 0;
    df_dx[41] = 0;
    df_dx[42] = 0;
    df_dx[43] = 0;
    df_dx[44] = 0;
    df_dx[45] = 0;
    df_dx[46] = 0;
    df_dx[47] = 0;
    df_dx[48] = 0;
    df_dx[49] = 0;
    df_dx[50] = 0;
    df_dx[51] = 0;
    df_dx[52] = 0;
    df_dx[53] = 0;
    df_dx[54] = 0;
    df_dx[55] = 0;
    df_dx[56] = 1;
    df_dx[57] = 0;
    df_dx[58] = 0;
    df_dx[59] = 0;
    df_dx[60] = 0;
    df_dx[61] = 0;
    df_dx[62] = 0;
    df_dx[63] = 0;
    df_dx[64] = 0;
    df_dx[65] = 0;
    df_dx[66] = 0;
    df_dx[67] = 0;
    df_dx[68] = 0;
    df_dx[69] = 0;
    df_dx[70] = 0;
    df_dx[71] = 0;
    df_dx[72] = 0;
    df_dx[73] = 0;
    df_dx[74] = 0;
    df_dx[75] = 0;
    df_dx[76] = 0;
    df_dx[77] = 0;
    df_dx[78] = 1;
    df_dx[79] = 0;
    df_dx[80] = 0;
    df_dx[81] = 0;
    df_dx[82] = 0;
    df_dx[83] = 0;
    df_dx[84] = 0;
    df_dx[85] = 0;
    df_dx[86] = 0;
    df_dx[87] = 0;
    df_dx[88] = 0;
    df_dx[89] = 0;
    df_dx[90] = 0;
    df_dx[91] = 0;
    df_dx[92] = 0;
    df_dx[93] = 0;
    df_dx[94] = 0;
    df_dx[95] = 0;
    df_dx[96] = 0;
    df_dx[97] = 0;
    df_dx[98] = 0;
    df_dx[99] = 0;
    df_dx[100] = 1;
    df_dx[101] = 0;
    df_dx[102] = 0;
    df_dx[103] = 0;
    df_dx[104] = 0;
    df_dx[105] = 0;
    df_dx[106] = 0;
    df_dx[107] = 0;
    df_dx[108] = 0;
    df_dx[109] = 0;
    df_dx[110] = 0;
    df_dx[111] = 0;
    df_dx[112] = 0;
    df_dx[113] = 0;
    df_dx[114] = 0;
    df_dx[115] = 0;
    df_dx[116] = 0;
    df_dx[117] = 0;
    df_dx[118] = 0;
    df_dx[119] = 0;
    df_dx[120] = 0;
    df_dx[121] = 0;
    df_dx[122] = 1;
    df_dx[123] = 0;
    df_dx[124] = 0;
    df_dx[125] = 0;
    df_dx[126] = 0;
    df_dx[127] = 0;
    df_dx[128] = 0;
    df_dx[129] = 0;
    df_dx[130] = 0;
    df_dx[131] = 0;
    df_dx[132] = 0;
    df_dx[133] = 0;
    df_dx[134] = 0;
    df_dx[135] = 0;
    df_dx[136] = 0;
    df_dx[137] = 0;
    df_dx[138] = 0;
    df_dx[139] = 0;
    df_dx[140] = 0;
    df_dx[141] = 0;
    df_dx[142] = 0;
    df_dx[143] = 0;
    df_dx[144] = 1;
    df_dx[145] = 0;
    df_dx[146] = 0;
    df_dx[147] = 0;
    df_dx[148] = 0;
    df_dx[149] = 0;
    df_dx[150] = 0;
    df_dx[151] = 0;
    df_dx[152] = 0;
    df_dx[153] = 0;
    df_dx[154] = 0;
    df_dx[155] = 0;
    df_dx[156] = 0;
    df_dx[157] = 0;
    df_dx[158] = 0;
    df_dx[159] = 0;
    df_dx[160] = 0;
    df_dx[161] = 0;
    df_dx[162] = 0;
    df_dx[163] = 0;
    df_dx[164] = 0;
    df_dx[165] = 0;
    df_dx[166] = 1;
    df_dx[167] = 0;
    df_dx[168] = 0;
    df_dx[169] = 0;
    df_dx[170] = 0;
    df_dx[171] = 0;
    df_dx[172] = 0;
    df_dx[173] = 0;
    df_dx[174] = 0;
    df_dx[175] = 0;
    df_dx[176] = 0;
    df_dx[177] = 0;
    df_dx[178] = 0;
    df_dx[179] = 0;
    df_dx[180] = 0;
    df_dx[181] = 0;
    df_dx[182] = 0;
    df_dx[183] = 0;
    df_dx[184] = 0;
    df_dx[185] = 0;
    df_dx[186] = 0;
    df_dx[187] = 0;
    df_dx[188] = 1;
    df_dx[189] = 0;
    df_dx[190] = 0;
    df_dx[191] = 0;
    df_dx[192] = 0;
    df_dx[193] = 0;
    df_dx[194] = 0;
    df_dx[195] = 0;
    df_dx[196] = 0;
    df_dx[197] = 0;
    df_dx[198] = 0;
    df_dx[199] = 0;
    df_dx[200] = 0;
    df_dx[201] = 0;
    df_dx[202] = 0;
    df_dx[203] = 0;
    df_dx[204] = 0;
    df_dx[205] = 0;
    df_dx[206] = 0;
    df_dx[207] = 0;
    df_dx[208] = 0;
    df_dx[209] = 0;
    df_dx[210] = 0;
    df_dx[211] = 0;
    df_dx[212] = 0;
    df_dx[213] = 0;
    df_dx[214] = 0;
    df_dx[215] = 0;
    df_dx[216] = 0;
    df_dx[217] = 0;
    df_dx[218] = 0;
    df_dx[219] = 0;
    df_dx[220] = 0;
    df_dx[221] = 0;
    df_dx[222] = 0;
    df_dx[223] = 0;
    df_dx[224] = 0;
    df_dx[225] = 0;
    df_dx[226] = 0;
    df_dx[227] = 0;
    df_dx[228] = 0;
    df_dx[229] = 0;
    df_dx[230] = 0;
    df_dx[231] = 0;
    df_dx[232] = 0;
    df_dx[233] = 0;
    df_dx[234] = 0;
    df_dx[235] = 0;
    df_dx[236] = 0;
    df_dx[237] = 0;
    df_dx[238] = 0;
    df_dx[239] = 0;
    df_dx[240] = 0;
    df_dx[241] = 0;
    df_dx[242] = 0;
    df_dx[243] = 0;
    df_dx[244] = 0;
    df_dx[245] = 0;
    df_dx[246] = 0;
    df_dx[247] = 0;
    df_dx[248] = 0;
    df_dx[249] = 0;
    df_dx[250] = 0;
    df_dx[251] = 0;
    df_dx[252] = (8.88889 * (((-0.1 * (4 - (0.55 / sqrt((((x_0 * x_0) + (x_1 * x_1)) + (x_2 * x_2)))))) + ((-0.1 *  (-( (-(0.55 * ((0.5 * (x_0 + x_0)) / sqrt((((x_0 * x_0) + (x_1 * x_1)) + (x_2 * x_2)))))) / (sqrt((((x_0 * x_0) + (x_1 * x_1)) + (x_2 * x_2))) * sqrt((((x_0 * x_0) + (x_1 * x_1)) + (x_2 * x_2))))))) * x_0)) + ( (-(0.1 * (4 - (0.55 / sqrt(((((x_0 - x_3) * (x_0 - x_3)) + ((x_1 - x_4) * (x_1 - x_4))) + ((x_2 - x_5) * (x_2 - x_5)))))))) + ((0.1 *  (-( (-(0.55 * ((0.5 * ((x_0 - x_3) + (x_0 - x_3))) / sqrt(((((x_0 - x_3) * (x_0 - x_3)) + ((x_1 - x_4) * (x_1 - x_4))) + ((x_2 - x_5) * (x_2 - x_5))))))) / (sqrt(((((x_0 - x_3) * (x_0 - x_3)) + ((x_1 - x_4) * (x_1 - x_4))) + ((x_2 - x_5) * (x_2 - x_5)))) * sqrt(((((x_0 - x_3) * (x_0 - x_3)) + ((x_1 - x_4) * (x_1 - x_4))) + ((x_2 - x_5) * (x_2 - x_5)))))))) * ( (-x_0) + x_3)))));
    df_dx[253] = (8.88889 * (((-0.1 *  (-( (-(0.55 * ((0.5 * (x_1 + x_1)) / sqrt((((x_0 * x_0) + (x_1 * x_1)) + (x_2 * x_2)))))) / (sqrt((((x_0 * x_0) + (x_1 * x_1)) + (x_2 * x_2))) * sqrt((((x_0 * x_0) + (x_1 * x_1)) + (x_2 * x_2))))))) * x_0) + ((0.1 *  (-( (-(0.55 * ((0.5 * ((x_1 - x_4) + (x_1 - x_4))) / sqrt(((((x_0 - x_3) * (x_0 - x_3)) + ((x_1 - x_4) * (x_1 - x_4))) + ((x_2 - x_5) * (x_2 - x_5))))))) / (sqrt(((((x_0 - x_3) * (x_0 - x_3)) + ((x_1 - x_4) * (x_1 - x_4))) + ((x_2 - x_5) * (x_2 - x_5)))) * sqrt(((((x_0 - x_3) * (x_0 - x_3)) + ((x_1 - x_4) * (x_1 - x_4))) + ((x_2 - x_5) * (x_2 - x_5)))))))) * ( (-x_0) + x_3))));
    df_dx[254] = (8.88889 * (((-0.1 *  (-( (-(0.55 * ((0.5 * (x_2 + x_2)) / sqrt((((x_0 * x_0) + (x_1 * x_1)) + (x_2 * x_2)))))) / (sqrt((((x_0 * x_0) + (x_1 * x_1)) + (x_2 * x_2))) * sqrt((((x_0 * x_0) + (x_1 * x_1)) + (x_2 * x_2))))))) * x_0) + ((0.1 *  (-( (-(0.55 * ((0.5 * ((x_2 - x_5) + (x_2 - x_5))) / sqrt(((((x_0 - x_3) * (x_0 - x_3)) + ((x_1 - x_4) * (x_1 - x_4))) + ((x_2 - x_5) * (x_2 - x_5))))))) / (sqrt(((((x_0 - x_3) * (x_0 - x_3)) + ((x_1 - x_4) * (x_1 - x_4))) + ((x_2 - x_5) * (x_2 - x_5)))) * sqrt(((((x_0 - x_3) * (x_0 - x_3)) + ((x_1 - x_4) * (x_1 - x_4))) + ((x_2 - x_5) * (x_2 - x_5)))))))) * ( (-x_0) + x_3))));
    df_dx[255] = (8.88889 * ((0.1 * (4 - (0.55 / sqrt(((((x_0 - x_3) * (x_0 - x_3)) + ((x_1 - x_4) * (x_1 - x_4))) + ((x_2 - x_5) * (x_2 - x_5))))))) + ((0.1 *  (-( (-(0.55 * ((0.5 * ( (-(x_0 - x_3)) +  (-(x_0 - x_3)))) / sqrt(((((x_0 - x_3) * (x_0 - x_3)) + ((x_1 - x_4) * (x_1 - x_4))) + ((x_2 - x_5) * (x_2 - x_5))))))) / (sqrt(((((x_0 - x_3) * (x_0 - x_3)) + ((x_1 - x_4) * (x_1 - x_4))) + ((x_2 - x_5) * (x_2 - x_5)))) * sqrt(((((x_0 - x_3) * (x_0 - x_3)) + ((x_1 - x_4) * (x_1 - x_4))) + ((x_2 - x_5) * (x_2 - x_5)))))))) * ( (-x_0) + x_3))));
    df_dx[256] = (8.88889 * ((0.1 *  (-( (-(0.55 * ((0.5 * ( (-(x_1 - x_4)) +  (-(x_1 - x_4)))) / sqrt(((((x_0 - x_3) * (x_0 - x_3)) + ((x_1 - x_4) * (x_1 - x_4))) + ((x_2 - x_5) * (x_2 - x_5))))))) / (sqrt(((((x_0 - x_3) * (x_0 - x_3)) + ((x_1 - x_4) * (x_1 - x_4))) + ((x_2 - x_5) * (x_2 - x_5)))) * sqrt(((((x_0 - x_3) * (x_0 - x_3)) + ((x_1 - x_4) * (x_1 - x_4))) + ((x_2 - x_5) * (x_2 - x_5)))))))) * ( (-x_0) + x_3)));
    df_dx[257] = (8.88889 * ((0.1 *  (-( (-(0.55 * ((0.5 * ( (-(x_2 - x_5)) +  (-(x_2 - x_5)))) / sqrt(((((x_0 - x_3) * (x_0 - x_3)) + ((x_1 - x_4) * (x_1 - x_4))) + ((x_2 - x_5) * (x_2 - x_5))))))) / (sqrt(((((x_0 - x_3) * (x_0 - x_3)) + ((x_1 - x_4) * (x_1 - x_4))) + ((x_2 - x_5) * (x_2 - x_5)))) * sqrt(((((x_0 - x_3) * (x_0 - x_3)) + ((x_1 - x_4) * (x_1 - x_4))) + ((x_2 - x_5) * (x_2 - x_5)))))))) * ( (-x_0) + x_3)));
    df_dx[258] = 0;
    df_dx[259] = 0;
    df_dx[260] = 0;
    df_dx[261] = 0;
    df_dx[262] = 0;
    df_dx[263] = 0;
    df_dx[264] = 0;
    df_dx[265] = 0;
    df_dx[266] = 0;
    df_dx[267] = 0;
    df_dx[268] = 0;
    df_dx[269] = 0;
    df_dx[270] = 0;
    df_dx[271] = 0;
    df_dx[272] = 0;
    df_dx[273] = (8.88889 * (((-0.1 *  (-( (-(0.55 * ((0.5 * (x_0 + x_0)) / sqrt((((x_0 * x_0) + (x_1 * x_1)) + (x_2 * x_2)))))) / (sqrt((((x_0 * x_0) + (x_1 * x_1)) + (x_2 * x_2))) * sqrt((((x_0 * x_0) + (x_1 * x_1)) + (x_2 * x_2))))))) * x_1) + ((0.1 *  (-( (-(0.55 * ((0.5 * ((x_0 - x_3) + (x_0 - x_3))) / sqrt(((((x_0 - x_3) * (x_0 - x_3)) + ((x_1 - x_4) * (x_1 - x_4))) + ((x_2 - x_5) * (x_2 - x_5))))))) / (sqrt(((((x_0 - x_3) * (x_0 - x_3)) + ((x_1 - x_4) * (x_1 - x_4))) + ((x_2 - x_5) * (x_2 - x_5)))) * sqrt(((((x_0 - x_3) * (x_0 - x_3)) + ((x_1 - x_4) * (x_1 - x_4))) + ((x_2 - x_5) * (x_2 - x_5)))))))) * ( (-x_1) + x_4))));
    df_dx[274] = (8.88889 * (((-0.1 * (4 - (0.55 / sqrt((((x_0 * x_0) + (x_1 * x_1)) + (x_2 * x_2)))))) + ((-0.1 *  (-( (-(0.55 * ((0.5 * (x_1 + x_1)) / sqrt((((x_0 * x_0) + (x_1 * x_1)) + (x_2 * x_2)))))) / (sqrt((((x_0 * x_0) + (x_1 * x_1)) + (x_2 * x_2))) * sqrt((((x_0 * x_0) + (x_1 * x_1)) + (x_2 * x_2))))))) * x_1)) + ( (-(0.1 * (4 - (0.55 / sqrt(((((x_0 - x_3) * (x_0 - x_3)) + ((x_1 - x_4) * (x_1 - x_4))) + ((x_2 - x_5) * (x_2 - x_5)))))))) + ((0.1 *  (-( (-(0.55 * ((0.5 * ((x_1 - x_4) + (x_1 - x_4))) / sqrt(((((x_0 - x_3) * (x_0 - x_3)) + ((x_1 - x_4) * (x_1 - x_4))) + ((x_2 - x_5) * (x_2 - x_5))))))) / (sqrt(((((x_0 - x_3) * (x_0 - x_3)) + ((x_1 - x_4) * (x_1 - x_4))) + ((x_2 - x_5) * (x_2 - x_5)))) * sqrt(((((x_0 - x_3) * (x_0 - x_3)) + ((x_1 - x_4) * (x_1 - x_4))) + ((x_2 - x_5) * (x_2 - x_5)))))))) * ( (-x_1) + x_4)))));
    df_dx[275] = (8.88889 * (((-0.1 *  (-( (-(0.55 * ((0.5 * (x_2 + x_2)) / sqrt((((x_0 * x_0) + (x_1 * x_1)) + (x_2 * x_2)))))) / (sqrt((((x_0 * x_0) + (x_1 * x_1)) + (x_2 * x_2))) * sqrt((((x_0 * x_0) + (x_1 * x_1)) + (x_2 * x_2))))))) * x_1) + ((0.1 *  (-( (-(0.55 * ((0.5 * ((x_2 - x_5) + (x_2 - x_5))) / sqrt(((((x_0 - x_3) * (x_0 - x_3)) + ((x_1 - x_4) * (x_1 - x_4))) + ((x_2 - x_5) * (x_2 - x_5))))))) / (sqrt(((((x_0 - x_3) * (x_0 - x_3)) + ((x_1 - x_4) * (x_1 - x_4))) + ((x_2 - x_5) * (x_2 - x_5)))) * sqrt(((((x_0 - x_3) * (x_0 - x_3)) + ((x_1 - x_4) * (x_1 - x_4))) + ((x_2 - x_5) * (x_2 - x_5)))))))) * ( (-x_1) + x_4))));
    df_dx[276] = (8.88889 * ((0.1 *  (-( (-(0.55 * ((0.5 * ( (-(x_0 - x_3)) +  (-(x_0 - x_3)))) / sqrt(((((x_0 - x_3) * (x_0 - x_3)) + ((x_1 - x_4) * (x_1 - x_4))) + ((x_2 - x_5) * (x_2 - x_5))))))) / (sqrt(((((x_0 - x_3) * (x_0 - x_3)) + ((x_1 - x_4) * (x_1 - x_4))) + ((x_2 - x_5) * (x_2 - x_5)))) * sqrt(((((x_0 - x_3) * (x_0 - x_3)) + ((x_1 - x_4) * (x_1 - x_4))) + ((x_2 - x_5) * (x_2 - x_5)))))))) * ( (-x_1) + x_4)));
    df_dx[277] = (8.88889 * ((0.1 * (4 - (0.55 / sqrt(((((x_0 - x_3) * (x_0 - x_3)) + ((x_1 - x_4) * (x_1 - x_4))) + ((x_2 - x_5) * (x_2 - x_5))))))) + ((0.1 *  (-( (-(0.55 * ((0.5 * ( (-(x_1 - x_4)) +  (-(x_1 - x_4)))) / sqrt(((((x_0 - x_3) * (x_0 - x_3)) + ((x_1 - x_4) * (x_1 - x_4))) + ((x_2 - x_5) * (x_2 - x_5))))))) / (sqrt(((((x_0 - x_3) * (x_0 - x_3)) + ((x_1 - x_4) * (x_1 - x_4))) + ((x_2 - x_5) * (x_2 - x_5)))) * sqrt(((((x_0 - x_3) * (x_0 - x_3)) + ((x_1 - x_4) * (x_1 - x_4))) + ((x_2 - x_5) * (x_2 - x_5)))))))) * ( (-x_1) + x_4))));
    df_dx[278] = (8.88889 * ((0.1 *  (-( (-(0.55 * ((0.5 * ( (-(x_2 - x_5)) +  (-(x_2 - x_5)))) / sqrt(((((x_0 - x_3) * (x_0 - x_3)) + ((x_1 - x_4) * (x_1 - x_4))) + ((x_2 - x_5) * (x_2 - x_5))))))) / (sqrt(((((x_0 - x_3) * (x_0 - x_3)) + ((x_1 - x_4) * (x_1 - x_4))) + ((x_2 - x_5) * (x_2 - x_5)))) * sqrt(((((x_0 - x_3) * (x_0 - x_3)) + ((x_1 - x_4) * (x_1 - x_4))) + ((x_2 - x_5) * (x_2 - x_5)))))))) * ( (-x_1) + x_4)));
    df_dx[279] = 0;
    df_dx[280] = 0;
    df_dx[281] = 0;
    df_dx[282] = 0;
    df_dx[283] = 0;
    df_dx[284] = 0;
    df_dx[285] = 0;
    df_dx[286] = 0;
    df_dx[287] = 0;
    df_dx[288] = 0;
    df_dx[289] = 0;
    df_dx[290] = 0;
    df_dx[291] = 0;
    df_dx[292] = 0;
    df_dx[293] = 0;
    df_dx[294] = (8.88889 * (((-0.1 *  (-( (-(0.55 * ((0.5 * (x_0 + x_0)) / sqrt((((x_0 * x_0) + (x_1 * x_1)) + (x_2 * x_2)))))) / (sqrt((((x_0 * x_0) + (x_1 * x_1)) + (x_2 * x_2))) * sqrt((((x_0 * x_0) + (x_1 * x_1)) + (x_2 * x_2))))))) * x_2) + ((0.1 *  (-( (-(0.55 * ((0.5 * ((x_0 - x_3) + (x_0 - x_3))) / sqrt(((((x_0 - x_3) * (x_0 - x_3)) + ((x_1 - x_4) * (x_1 - x_4))) + ((x_2 - x_5) * (x_2 - x_5))))))) / (sqrt(((((x_0 - x_3) * (x_0 - x_3)) + ((x_1 - x_4) * (x_1 - x_4))) + ((x_2 - x_5) * (x_2 - x_5)))) * sqrt(((((x_0 - x_3) * (x_0 - x_3)) + ((x_1 - x_4) * (x_1 - x_4))) + ((x_2 - x_5) * (x_2 - x_5)))))))) * ( (-x_2) + x_5))));
    df_dx[295] = (8.88889 * (((-0.1 *  (-( (-(0.55 * ((0.5 * (x_1 + x_1)) / sqrt((((x_0 * x_0) + (x_1 * x_1)) + (x_2 * x_2)))))) / (sqrt((((x_0 * x_0) + (x_1 * x_1)) + (x_2 * x_2))) * sqrt((((x_0 * x_0) + (x_1 * x_1)) + (x_2 * x_2))))))) * x_2) + ((0.1 *  (-( (-(0.55 * ((0.5 * ((x_1 - x_4) + (x_1 - x_4))) / sqrt(((((x_0 - x_3) * (x_0 - x_3)) + ((x_1 - x_4) * (x_1 - x_4))) + ((x_2 - x_5) * (x_2 - x_5))))))) / (sqrt(((((x_0 - x_3) * (x_0 - x_3)) + ((x_1 - x_4) * (x_1 - x_4))) + ((x_2 - x_5) * (x_2 - x_5)))) * sqrt(((((x_0 - x_3) * (x_0 - x_3)) + ((x_1 - x_4) * (x_1 - x_4))) + ((x_2 - x_5) * (x_2 - x_5)))))))) * ( (-x_2) + x_5))));
    df_dx[296] = (8.88889 * (((-0.1 * (4 - (0.55 / sqrt((((x_0 * x_0) + (x_1 * x_1)) + (x_2 * x_2)))))) + ((-0.1 *  (-( (-(0.55 * ((0.5 * (x_2 + x_2)) / sqrt((((x_0 * x_0) + (x_1 * x_1)) + (x_2 * x_2)))))) / (sqrt((((x_0 * x_0) + (x_1 * x_1)) + (x_2 * x_2))) * sqrt((((x_0 * x_0) + (x_1 * x_1)) + (x_2 * x_2))))))) * x_2)) + ( (-(0.1 * (4 - (0.55 / sqrt(((((x_0 - x_3) * (x_0 - x_3)) + ((x_1 - x_4) * (x_1 - x_4))) + ((x_2 - x_5) * (x_2 - x_5)))))))) + ((0.1 *  (-( (-(0.55 * ((0.5 * ((x_2 - x_5) + (x_2 - x_5))) / sqrt(((((x_0 - x_3) * (x_0 - x_3)) + ((x_1 - x_4) * (x_1 - x_4))) + ((x_2 - x_5) * (x_2 - x_5))))))) / (sqrt(((((x_0 - x_3) * (x_0 - x_3)) + ((x_1 - x_4) * (x_1 - x_4))) + ((x_2 - x_5) * (x_2 - x_5)))) * sqrt(((((x_0 - x_3) * (x_0 - x_3)) + ((x_1 - x_4) * (x_1 - x_4))) + ((x_2 - x_5) * (x_2 - x_5)))))))) * ( (-x_2) + x_5)))));
    df_dx[297] = (8.88889 * ((0.1 *  (-( (-(0.55 * ((0.5 * ( (-(x_0 - x_3)) +  (-(x_0 - x_3)))) / sqrt(((((x_0 - x_3) * (x_0 - x_3)) + ((x_1 - x_4) * (x_1 - x_4))) + ((x_2 - x_5) * (x_2 - x_5))))))) / (sqrt(((((x_0 - x_3) * (x_0 - x_3)) + ((x_1 - x_4) * (x_1 - x_4))) + ((x_2 - x_5) * (x_2 - x_5)))) * sqrt(((((x_0 - x_3) * (x_0 - x_3)) + ((x_1 - x_4) * (x_1 - x_4))) + ((x_2 - x_5) * (x_2 - x_5)))))))) * ( (-x_2) + x_5)));
    df_dx[298] = (8.88889 * ((0.1 *  (-( (-(0.55 * ((0.5 * ( (-(x_1 - x_4)) +  (-(x_1 - x_4)))) / sqrt(((((x_0 - x_3) * (x_0 - x_3)) + ((x_1 - x_4) * (x_1 - x_4))) + ((x_2 - x_5) * (x_2 - x_5))))))) / (sqrt(((((x_0 - x_3) * (x_0 - x_3)) + ((x_1 - x_4) * (x_1 - x_4))) + ((x_2 - x_5) * (x_2 - x_5)))) * sqrt(((((x_0 - x_3) * (x_0 - x_3)) + ((x_1 - x_4) * (x_1 - x_4))) + ((x_2 - x_5) * (x_2 - x_5)))))))) * ( (-x_2) + x_5)));
    df_dx[299] = (8.88889 * ((0.1 * (4 - (0.55 / sqrt(((((x_0 - x_3) * (x_0 - x_3)) + ((x_1 - x_4) * (x_1 - x_4))) + ((x_2 - x_5) * (x_2 - x_5))))))) + ((0.1 *  (-( (-(0.55 * ((0.5 * ( (-(x_2 - x_5)) +  (-(x_2 - x_5)))) / sqrt(((((x_0 - x_3) * (x_0 - x_3)) + ((x_1 - x_4) * (x_1 - x_4))) + ((x_2 - x_5) * (x_2 - x_5))))))) / (sqrt(((((x_0 - x_3) * (x_0 - x_3)) + ((x_1 - x_4) * (x_1 - x_4))) + ((x_2 - x_5) * (x_2 - x_5)))) * sqrt(((((x_0 - x_3) * (x_0 - x_3)) + ((x_1 - x_4) * (x_1 - x_4))) + ((x_2 - x_5) * (x_2 - x_5)))))))) * ( (-x_2) + x_5))));
    df_dx[300] = 0;
    df_dx[301] = 0;
    df_dx[302] = 0;
    df_dx[303] = 0;
    df_dx[304] = 0;
    df_dx[305] = 0;
    df_dx[306] = 0;
    df_dx[307] = 0;
    df_dx[308] = 0;
    df_dx[309] = 0;
    df_dx[310] = 0;
    df_dx[311] = 0;
    df_dx[312] = 0;
    df_dx[313] = 0;
    df_dx[314] = 0;
    df_dx[315] = (8.88889 * ( (-(-0.1 * (4 - (0.55 / sqrt(((((x_0 - x_3) * (x_0 - x_3)) + ((x_1 - x_4) * (x_1 - x_4))) + ((x_2 - x_5) * (x_2 - x_5)))))))) + ((-0.1 *  (-( (-(0.55 * ((0.5 * ((x_0 - x_3) + (x_0 - x_3))) / sqrt(((((x_0 - x_3) * (x_0 - x_3)) + ((x_1 - x_4) * (x_1 - x_4))) + ((x_2 - x_5) * (x_2 - x_5))))))) / (sqrt(((((x_0 - x_3) * (x_0 - x_3)) + ((x_1 - x_4) * (x_1 - x_4))) + ((x_2 - x_5) * (x_2 - x_5)))) * sqrt(((((x_0 - x_3) * (x_0 - x_3)) + ((x_1 - x_4) * (x_1 - x_4))) + ((x_2 - x_5) * (x_2 - x_5)))))))) * ( (-x_0) + x_3))));
    df_dx[316] = (8.88889 * ((-0.1 *  (-( (-(0.55 * ((0.5 * ((x_1 - x_4) + (x_1 - x_4))) / sqrt(((((x_0 - x_3) * (x_0 - x_3)) + ((x_1 - x_4) * (x_1 - x_4))) + ((x_2 - x_5) * (x_2 - x_5))))))) / (sqrt(((((x_0 - x_3) * (x_0 - x_3)) + ((x_1 - x_4) * (x_1 - x_4))) + ((x_2 - x_5) * (x_2 - x_5)))) * sqrt(((((x_0 - x_3) * (x_0 - x_3)) + ((x_1 - x_4) * (x_1 - x_4))) + ((x_2 - x_5) * (x_2 - x_5)))))))) * ( (-x_0) + x_3)));
    df_dx[317] = (8.88889 * ((-0.1 *  (-( (-(0.55 * ((0.5 * ((x_2 - x_5) + (x_2 - x_5))) / sqrt(((((x_0 - x_3) * (x_0 - x_3)) + ((x_1 - x_4) * (x_1 - x_4))) + ((x_2 - x_5) * (x_2 - x_5))))))) / (sqrt(((((x_0 - x_3) * (x_0 - x_3)) + ((x_1 - x_4) * (x_1 - x_4))) + ((x_2 - x_5) * (x_2 - x_5)))) * sqrt(((((x_0 - x_3) * (x_0 - x_3)) + ((x_1 - x_4) * (x_1 - x_4))) + ((x_2 - x_5) * (x_2 - x_5)))))))) * ( (-x_0) + x_3)));
    df_dx[318] = (8.88889 * (((-0.1 * (4 - (0.55 / sqrt(((((x_0 - x_3) * (x_0 - x_3)) + ((x_1 - x_4) * (x_1 - x_4))) + ((x_2 - x_5) * (x_2 - x_5))))))) + ((-0.1 *  (-( (-(0.55 * ((0.5 * ( (-(x_0 - x_3)) +  (-(x_0 - x_3)))) / sqrt(((((x_0 - x_3) * (x_0 - x_3)) + ((x_1 - x_4) * (x_1 - x_4))) + ((x_2 - x_5) * (x_2 - x_5))))))) / (sqrt(((((x_0 - x_3) * (x_0 - x_3)) + ((x_1 - x_4) * (x_1 - x_4))) + ((x_2 - x_5) * (x_2 - x_5)))) * sqrt(((((x_0 - x_3) * (x_0 - x_3)) + ((x_1 - x_4) * (x_1 - x_4))) + ((x_2 - x_5) * (x_2 - x_5)))))))) * ( (-x_0) + x_3))) + ( (-(0.1 * (4 - (0.55 / sqrt(((((x_3 - x_6) * (x_3 - x_6)) + ((x_4 - x_7) * (x_4 - x_7))) + ((x_5 - x_8) * (x_5 - x_8)))))))) + ((0.1 *  (-( (-(0.55 * ((0.5 * ((x_3 - x_6) + (x_3 - x_6))) / sqrt(((((x_3 - x_6) * (x_3 - x_6)) + ((x_4 - x_7) * (x_4 - x_7))) + ((x_5 - x_8) * (x_5 - x_8))))))) / (sqrt(((((x_3 - x_6) * (x_3 - x_6)) + ((x_4 - x_7) * (x_4 - x_7))) + ((x_5 - x_8) * (x_5 - x_8)))) * sqrt(((((x_3 - x_6) * (x_3 - x_6)) + ((x_4 - x_7) * (x_4 - x_7))) + ((x_5 - x_8) * (x_5 - x_8)))))))) * ( (-x_3) + x_6)))));
    df_dx[319] = (8.88889 * (((-0.1 *  (-( (-(0.55 * ((0.5 * ( (-(x_1 - x_4)) +  (-(x_1 - x_4)))) / sqrt(((((x_0 - x_3) * (x_0 - x_3)) + ((x_1 - x_4) * (x_1 - x_4))) + ((x_2 - x_5) * (x_2 - x_5))))))) / (sqrt(((((x_0 - x_3) * (x_0 - x_3)) + ((x_1 - x_4) * (x_1 - x_4))) + ((x_2 - x_5) * (x_2 - x_5)))) * sqrt(((((x_0 - x_3) * (x_0 - x_3)) + ((x_1 - x_4) * (x_1 - x_4))) + ((x_2 - x_5) * (x_2 - x_5)))))))) * ( (-x_0) + x_3)) + ((0.1 *  (-( (-(0.55 * ((0.5 * ((x_4 - x_7) + (x_4 - x_7))) / sqrt(((((x_3 - x_6) * (x_3 - x_6)) + ((x_4 - x_7) * (x_4 - x_7))) + ((x_5 - x_8) * (x_5 - x_8))))))) / (sqrt(((((x_3 - x_6) * (x_3 - x_6)) + ((x_4 - x_7) * (x_4 - x_7))) + ((x_5 - x_8) * (x_5 - x_8)))) * sqrt(((((x_3 - x_6) * (x_3 - x_6)) + ((x_4 - x_7) * (x_4 - x_7))) + ((x_5 - x_8) * (x_5 - x_8)))))))) * ( (-x_3) + x_6))));
    df_dx[320] = (8.88889 * (((-0.1 *  (-( (-(0.55 * ((0.5 * ( (-(x_2 - x_5)) +  (-(x_2 - x_5)))) / sqrt(((((x_0 - x_3) * (x_0 - x_3)) + ((x_1 - x_4) * (x_1 - x_4))) + ((x_2 - x_5) * (x_2 - x_5))))))) / (sqrt(((((x_0 - x_3) * (x_0 - x_3)) + ((x_1 - x_4) * (x_1 - x_4))) + ((x_2 - x_5) * (x_2 - x_5)))) * sqrt(((((x_0 - x_3) * (x_0 - x_3)) + ((x_1 - x_4) * (x_1 - x_4))) + ((x_2 - x_5) * (x_2 - x_5)))))))) * ( (-x_0) + x_3)) + ((0.1 *  (-( (-(0.55 * ((0.5 * ((x_5 - x_8) + (x_5 - x_8))) / sqrt(((((x_3 - x_6) * (x_3 - x_6)) + ((x_4 - x_7) * (x_4 - x_7))) + ((x_5 - x_8) * (x_5 - x_8))))))) / (sqrt(((((x_3 - x_6) * (x_3 - x_6)) + ((x_4 - x_7) * (x_4 - x_7))) + ((x_5 - x_8) * (x_5 - x_8)))) * sqrt(((((x_3 - x_6) * (x_3 - x_6)) + ((x_4 - x_7) * (x_4 - x_7))) + ((x_5 - x_8) * (x_5 - x_8)))))))) * ( (-x_3) + x_6))));
    df_dx[321] = (8.88889 * ((0.1 * (4 - (0.55 / sqrt(((((x_3 - x_6) * (x_3 - x_6)) + ((x_4 - x_7) * (x_4 - x_7))) + ((x_5 - x_8) * (x_5 - x_8))))))) + ((0.1 *  (-( (-(0.55 * ((0.5 * ( (-(x_3 - x_6)) +  (-(x_3 - x_6)))) / sqrt(((((x_3 - x_6) * (x_3 - x_6)) + ((x_4 - x_7) * (x_4 - x_7))) + ((x_5 - x_8) * (x_5 - x_8))))))) / (sqrt(((((x_3 - x_6) * (x_3 - x_6)) + ((x_4 - x_7) * (x_4 - x_7))) + ((x_5 - x_8) * (x_5 - x_8)))) * sqrt(((((x_3 - x_6) * (x_3 - x_6)) + ((x_4 - x_7) * (x_4 - x_7))) + ((x_5 - x_8) * (x_5 - x_8)))))))) * ( (-x_3) + x_6))));
    df_dx[322] = (8.88889 * ((0.1 *  (-( (-(0.55 * ((0.5 * ( (-(x_4 - x_7)) +  (-(x_4 - x_7)))) / sqrt(((((x_3 - x_6) * (x_3 - x_6)) + ((x_4 - x_7) * (x_4 - x_7))) + ((x_5 - x_8) * (x_5 - x_8))))))) / (sqrt(((((x_3 - x_6) * (x_3 - x_6)) + ((x_4 - x_7) * (x_4 - x_7))) + ((x_5 - x_8) * (x_5 - x_8)))) * sqrt(((((x_3 - x_6) * (x_3 - x_6)) + ((x_4 - x_7) * (x_4 - x_7))) + ((x_5 - x_8) * (x_5 - x_8)))))))) * ( (-x_3) + x_6)));
    df_dx[323] = (8.88889 * ((0.1 *  (-( (-(0.55 * ((0.5 * ( (-(x_5 - x_8)) +  (-(x_5 - x_8)))) / sqrt(((((x_3 - x_6) * (x_3 - x_6)) + ((x_4 - x_7) * (x_4 - x_7))) + ((x_5 - x_8) * (x_5 - x_8))))))) / (sqrt(((((x_3 - x_6) * (x_3 - x_6)) + ((x_4 - x_7) * (x_4 - x_7))) + ((x_5 - x_8) * (x_5 - x_8)))) * sqrt(((((x_3 - x_6) * (x_3 - x_6)) + ((x_4 - x_7) * (x_4 - x_7))) + ((x_5 - x_8) * (x_5 - x_8)))))))) * ( (-x_3) + x_6)));
    df_dx[324] = 0;
    df_dx[325] = 0;
    df_dx[326] = 0;
    df_dx[327] = 0;
    df_dx[328] = 0;
    df_dx[329] = 0;
    df_dx[330] = 0;
    df_dx[331] = 0;
    df_dx[332] = 0;
    df_dx[333] = 0;
    df_dx[334] = 0;
    df_dx[335] = 0;
    df_dx[336] = (8.88889 * ((-0.1 *  (-( (-(0.55 * ((0.5 * ((x_0 - x_3) + (x_0 - x_3))) / sqrt(((((x_0 - x_3) * (x_0 - x_3)) + ((x_1 - x_4) * (x_1 - x_4))) + ((x_2 - x_5) * (x_2 - x_5))))))) / (sqrt(((((x_0 - x_3) * (x_0 - x_3)) + ((x_1 - x_4) * (x_1 - x_4))) + ((x_2 - x_5) * (x_2 - x_5)))) * sqrt(((((x_0 - x_3) * (x_0 - x_3)) + ((x_1 - x_4) * (x_1 - x_4))) + ((x_2 - x_5) * (x_2 - x_5)))))))) * ( (-x_1) + x_4)));
    df_dx[337] = (8.88889 * ( (-(-0.1 * (4 - (0.55 / sqrt(((((x_0 - x_3) * (x_0 - x_3)) + ((x_1 - x_4) * (x_1 - x_4))) + ((x_2 - x_5) * (x_2 - x_5)))))))) + ((-0.1 *  (-( (-(0.55 * ((0.5 * ((x_1 - x_4) + (x_1 - x_4))) / sqrt(((((x_0 - x_3) * (x_0 - x_3)) + ((x_1 - x_4) * (x_1 - x_4))) + ((x_2 - x_5) * (x_2 - x_5))))))) / (sqrt(((((x_0 - x_3) * (x_0 - x_3)) + ((x_1 - x_4) * (x_1 - x_4))) + ((x_2 - x_5) * (x_2 - x_5)))) * sqrt(((((x_0 - x_3) * (x_0 - x_3)) + ((x_1 - x_4) * (x_1 - x_4))) + ((x_2 - x_5) * (x_2 - x_5)))))))) * ( (-x_1) + x_4))));
    df_dx[338] = (8.88889 * ((-0.1 *  (-( (-(0.55 * ((0.5 * ((x_2 - x_5) + (x_2 - x_5))) / sqrt(((((x_0 - x_3) * (x_0 - x_3)) + ((x_1 - x_4) * (x_1 - x_4))) + ((x_2 - x_5) * (x_2 - x_5))))))) / (sqrt(((((x_0 - x_3) * (x_0 - x_3)) + ((x_1 - x_4) * (x_1 - x_4))) + ((x_2 - x_5) * (x_2 - x_5)))) * sqrt(((((x_0 - x_3) * (x_0 - x_3)) + ((x_1 - x_4) * (x_1 - x_4))) + ((x_2 - x_5) * (x_2 - x_5)))))))) * ( (-x_1) + x_4)));
    df_dx[339] = (8.88889 * (((-0.1 *  (-( (-(0.55 * ((0.5 * ( (-(x_0 - x_3)) +  (-(x_0 - x_3)))) / sqrt(((((x_0 - x_3) * (x_0 - x_3)) + ((x_1 - x_4) * (x_1 - x_4))) + ((x_2 - x_5) * (x_2 - x_5))))))) / (sqrt(((((x_0 - x_3) * (x_0 - x_3)) + ((x_1 - x_4) * (x_1 - x_4))) + ((x_2 - x_5) * (x_2 - x_5)))) * sqrt(((((x_0 - x_3) * (x_0 - x_3)) + ((x_1 - x_4) * (x_1 - x_4))) + ((x_2 - x_5) * (x_2 - x_5)))))))) * ( (-x_1) + x_4)) + ((0.1 *  (-( (-(0.55 * ((0.5 * ((x_3 - x_6) + (x_3 - x_6))) / sqrt(((((x_3 - x_6) * (x_3 - x_6)) + ((x_4 - x_7) * (x_4 - x_7))) + ((x_5 - x_8) * (x_5 - x_8))))))) / (sqrt(((((x_3 - x_6) * (x_3 - x_6)) + ((x_4 - x_7) * (x_4 - x_7))) + ((x_5 - x_8) * (x_5 - x_8)))) * sqrt(((((x_3 - x_6) * (x_3 - x_6)) + ((x_4 - x_7) * (x_4 - x_7))) + ((x_5 - x_8) * (x_5 - x_8)))))))) * ( (-x_4) + x_7))));
    df_dx[340] = (8.88889 * (((-0.1 * (4 - (0.55 / sqrt(((((x_0 - x_3) * (x_0 - x_3)) + ((x_1 - x_4) * (x_1 - x_4))) + ((x_2 - x_5) * (x_2 - x_5))))))) + ((-0.1 *  (-( (-(0.55 * ((0.5 * ( (-(x_1 - x_4)) +  (-(x_1 - x_4)))) / sqrt(((((x_0 - x_3) * (x_0 - x_3)) + ((x_1 - x_4) * (x_1 - x_4))) + ((x_2 - x_5) * (x_2 - x_5))))))) / (sqrt(((((x_0 - x_3) * (x_0 - x_3)) + ((x_1 - x_4) * (x_1 - x_4))) + ((x_2 - x_5) * (x_2 - x_5)))) * sqrt(((((x_0 - x_3) * (x_0 - x_3)) + ((x_1 - x_4) * (x_1 - x_4))) + ((x_2 - x_5) * (x_2 - x_5)))))))) * ( (-x_1) + x_4))) + ( (-(0.1 * (4 - (0.55 / sqrt(((((x_3 - x_6) * (x_3 - x_6)) + ((x_4 - x_7) * (x_4 - x_7))) + ((x_5 - x_8) * (x_5 - x_8)))))))) + ((0.1 *  (-( (-(0.55 * ((0.5 * ((x_4 - x_7) + (x_4 - x_7))) / sqrt(((((x_3 - x_6) * (x_3 - x_6)) + ((x_4 - x_7) * (x_4 - x_7))) + ((x_5 - x_8) * (x_5 - x_8))))))) / (sqrt(((((x_3 - x_6) * (x_3 - x_6)) + ((x_4 - x_7) * (x_4 - x_7))) + ((x_5 - x_8) * (x_5 - x_8)))) * sqrt(((((x_3 - x_6) * (x_3 - x_6)) + ((x_4 - x_7) * (x_4 - x_7))) + ((x_5 - x_8) * (x_5 - x_8)))))))) * ( (-x_4) + x_7)))));
    df_dx[341] = (8.88889 * (((-0.1 *  (-( (-(0.55 * ((0.5 * ( (-(x_2 - x_5)) +  (-(x_2 - x_5)))) / sqrt(((((x_0 - x_3) * (x_0 - x_3)) + ((x_1 - x_4) * (x_1 - x_4))) + ((x_2 - x_5) * (x_2 - x_5))))))) / (sqrt(((((x_0 - x_3) * (x_0 - x_3)) + ((x_1 - x_4) * (x_1 - x_4))) + ((x_2 - x_5) * (x_2 - x_5)))) * sqrt(((((x_0 - x_3) * (x_0 - x_3)) + ((x_1 - x_4) * (x_1 - x_4))) + ((x_2 - x_5) * (x_2 - x_5)))))))) * ( (-x_1) + x_4)) + ((0.1 *  (-( (-(0.55 * ((0.5 * ((x_5 - x_8) + (x_5 - x_8))) / sqrt(((((x_3 - x_6) * (x_3 - x_6)) + ((x_4 - x_7) * (x_4 - x_7))) + ((x_5 - x_8) * (x_5 - x_8))))))) / (sqrt(((((x_3 - x_6) * (x_3 - x_6)) + ((x_4 - x_7) * (x_4 - x_7))) + ((x_5 - x_8) * (x_5 - x_8)))) * sqrt(((((x_3 - x_6) * (x_3 - x_6)) + ((x_4 - x_7) * (x_4 - x_7))) + ((x_5 - x_8) * (x_5 - x_8)))))))) * ( (-x_4) + x_7))));
    df_dx[342] = (8.88889 * ((0.1 *  (-( (-(0.55 * ((0.5 * ( (-(x_3 - x_6)) +  (-(x_3 - x_6)))) / sqrt(((((x_3 - x_6) * (x_3 - x_6)) + ((x_4 - x_7) * (x_4 - x_7))) + ((x_5 - x_8) * (x_5 - x_8))))))) / (sqrt(((((x_3 - x_6) * (x_3 - x_6)) + ((x_4 - x_7) * (x_4 - x_7))) + ((x_5 - x_8) * (x_5 - x_8)))) * sqrt(((((x_3 - x_6) * (x_3 - x_6)) + ((x_4 - x_7) * (x_4 - x_7))) + ((x_5 - x_8) * (x_5 - x_8)))))))) * ( (-x_4) + x_7)));
    df_dx[343] = (8.88889 * ((0.1 * (4 - (0.55 / sqrt(((((x_3 - x_6) * (x_3 - x_6)) + ((x_4 - x_7) * (x_4 - x_7))) + ((x_5 - x_8) * (x_5 - x_8))))))) + ((0.1 *  (-( (-(0.55 * ((0.5 * ( (-(x_4 - x_7)) +  (-(x_4 - x_7)))) / sqrt(((((x_3 - x_6) * (x_3 - x_6)) + ((x_4 - x_7) * (x_4 - x_7))) + ((x_5 - x_8) * (x_5 - x_8))))))) / (sqrt(((((x_3 - x_6) * (x_3 - x_6)) + ((x_4 - x_7) * (x_4 - x_7))) + ((x_5 - x_8) * (x_5 - x_8)))) * sqrt(((((x_3 - x_6) * (x_3 - x_6)) + ((x_4 - x_7) * (x_4 - x_7))) + ((x_5 - x_8) * (x_5 - x_8)))))))) * ( (-x_4) + x_7))));
    df_dx[344] = (8.88889 * ((0.1 *  (-( (-(0.55 * ((0.5 * ( (-(x_5 - x_8)) +  (-(x_5 - x_8)))) / sqrt(((((x_3 - x_6) * (x_3 - x_6)) + ((x_4 - x_7) * (x_4 - x_7))) + ((x_5 - x_8) * (x_5 - x_8))))))) / (sqrt(((((x_3 - x_6) * (x_3 - x_6)) + ((x_4 - x_7) * (x_4 - x_7))) + ((x_5 - x_8) * (x_5 - x_8)))) * sqrt(((((x_3 - x_6) * (x_3 - x_6)) + ((x_4 - x_7) * (x_4 - x_7))) + ((x_5 - x_8) * (x_5 - x_8)))))))) * ( (-x_4) + x_7)));
    df_dx[345] = 0;
    df_dx[346] = 0;
    df_dx[347] = 0;
    df_dx[348] = 0;
    df_dx[349] = 0;
    df_dx[350] = 0;
    df_dx[351] = 0;
    df_dx[352] = 0;
    df_dx[353] = 0;
    df_dx[354] = 0;
    df_dx[355] = 0;
    df_dx[356] = 0;
    df_dx[357] = (8.88889 * ((-0.1 *  (-( (-(0.55 * ((0.5 * ((x_0 - x_3) + (x_0 - x_3))) / sqrt(((((x_0 - x_3) * (x_0 - x_3)) + ((x_1 - x_4) * (x_1 - x_4))) + ((x_2 - x_5) * (x_2 - x_5))))))) / (sqrt(((((x_0 - x_3) * (x_0 - x_3)) + ((x_1 - x_4) * (x_1 - x_4))) + ((x_2 - x_5) * (x_2 - x_5)))) * sqrt(((((x_0 - x_3) * (x_0 - x_3)) + ((x_1 - x_4) * (x_1 - x_4))) + ((x_2 - x_5) * (x_2 - x_5)))))))) * ( (-x_2) + x_5)));
    df_dx[358] = (8.88889 * ((-0.1 *  (-( (-(0.55 * ((0.5 * ((x_1 - x_4) + (x_1 - x_4))) / sqrt(((((x_0 - x_3) * (x_0 - x_3)) + ((x_1 - x_4) * (x_1 - x_4))) + ((x_2 - x_5) * (x_2 - x_5))))))) / (sqrt(((((x_0 - x_3) * (x_0 - x_3)) + ((x_1 - x_4) * (x_1 - x_4))) + ((x_2 - x_5) * (x_2 - x_5)))) * sqrt(((((x_0 - x_3) * (x_0 - x_3)) + ((x_1 - x_4) * (x_1 - x_4))) + ((x_2 - x_5) * (x_2 - x_5)))))))) * ( (-x_2) + x_5)));
    df_dx[359] = (8.88889 * ( (-(-0.1 * (4 - (0.55 / sqrt(((((x_0 - x_3) * (x_0 - x_3)) + ((x_1 - x_4) * (x_1 - x_4))) + ((x_2 - x_5) * (x_2 - x_5)))))))) + ((-0.1 *  (-( (-(0.55 * ((0.5 * ((x_2 - x_5) + (x_2 - x_5))) / sqrt(((((x_0 - x_3) * (x_0 - x_3)) + ((x_1 - x_4) * (x_1 - x_4))) + ((x_2 - x_5) * (x_2 - x_5))))))) / (sqrt(((((x_0 - x_3) * (x_0 - x_3)) + ((x_1 - x_4) * (x_1 - x_4))) + ((x_2 - x_5) * (x_2 - x_5)))) * sqrt(((((x_0 - x_3) * (x_0 - x_3)) + ((x_1 - x_4) * (x_1 - x_4))) + ((x_2 - x_5) * (x_2 - x_5)))))))) * ( (-x_2) + x_5))));
    df_dx[360] = (8.88889 * (((-0.1 *  (-( (-(0.55 * ((0.5 * ( (-(x_0 - x_3)) +  (-(x_0 - x_3)))) / sqrt(((((x_0 - x_3) * (x_0 - x_3)) + ((x_1 - x_4) * (x_1 - x_4))) + ((x_2 - x_5) * (x_2 - x_5))))))) / (sqrt(((((x_0 - x_3) * (x_0 - x_3)) + ((x_1 - x_4) * (x_1 - x_4))) + ((x_2 - x_5) * (x_2 - x_5)))) * sqrt(((((x_0 - x_3) * (x_0 - x_3)) + ((x_1 - x_4) * (x_1 - x_4))) + ((x_2 - x_5) * (x_2 - x_5)))))))) * ( (-x_2) + x_5)) + ((0.1 *  (-( (-(0.55 * ((0.5 * ((x_3 - x_6) + (x_3 - x_6))) / sqrt(((((x_3 - x_6) * (x_3 - x_6)) + ((x_4 - x_7) * (x_4 - x_7))) + ((x_5 - x_8) * (x_5 - x_8))))))) / (sqrt(((((x_3 - x_6) * (x_3 - x_6)) + ((x_4 - x_7) * (x_4 - x_7))) + ((x_5 - x_8) * (x_5 - x_8)))) * sqrt(((((x_3 - x_6) * (x_3 - x_6)) + ((x_4 - x_7) * (x_4 - x_7))) + ((x_5 - x_8) * (x_5 - x_8)))))))) * ( (-x_5) + x_8))));
    df_dx[361] = (8.88889 * (((-0.1 *  (-( (-(0.55 * ((0.5 * ( (-(x_1 - x_4)) +  (-(x_1 - x_4)))) / sqrt(((((x_0 - x_3) * (x_0 - x_3)) + ((x_1 - x_4) * (x_1 - x_4))) + ((x_2 - x_5) * (x_2 - x_5))))))) / (sqrt(((((x_0 - x_3) * (x_0 - x_3)) + ((x_1 - x_4) * (x_1 - x_4))) + ((x_2 - x_5) * (x_2 - x_5)))) * sqrt(((((x_0 - x_3) * (x_0 - x_3)) + ((x_1 - x_4) * (x_1 - x_4))) + ((x_2 - x_5) * (x_2 - x_5)))))))) * ( (-x_2) + x_5)) + ((0.1 *  (-( (-(0.55 * ((0.5 * ((x_4 - x_7) + (x_4 - x_7))) / sqrt(((((x_3 - x_6) * (x_3 - x_6)) + ((x_4 - x_7) * (x_4 - x_7))) + ((x_5 - x_8) * (x_5 - x_8))))))) / (sqrt(((((x_3 - x_6) * (x_3 - x_6)) + ((x_4 - x_7) * (x_4 - x_7))) + ((x_5 - x_8) * (x_5 - x_8)))) * sqrt(((((x_3 - x_6) * (x_3 - x_6)) + ((x_4 - x_7) * (x_4 - x_7))) + ((x_5 - x_8) * (x_5 - x_8)))))))) * ( (-x_5) + x_8))));
    df_dx[362] = (8.88889 * (((-0.1 * (4 - (0.55 / sqrt(((((x_0 - x_3) * (x_0 - x_3)) + ((x_1 - x_4) * (x_1 - x_4))) + ((x_2 - x_5) * (x_2 - x_5))))))) + ((-0.1 *  (-( (-(0.55 * ((0.5 * ( (-(x_2 - x_5)) +  (-(x_2 - x_5)))) / sqrt(((((x_0 - x_3) * (x_0 - x_3)) + ((x_1 - x_4) * (x_1 - x_4))) + ((x_2 - x_5) * (x_2 - x_5))))))) / (sqrt(((((x_0 - x_3) * (x_0 - x_3)) + ((x_1 - x_4) * (x_1 - x_4))) + ((x_2 - x_5) * (x_2 - x_5)))) * sqrt(((((x_0 - x_3) * (x_0 - x_3)) + ((x_1 - x_4) * (x_1 - x_4))) + ((x_2 - x_5) * (x_2 - x_5)))))))) * ( (-x_2) + x_5))) + ( (-(0.1 * (4 - (0.55 / sqrt(((((x_3 - x_6) * (x_3 - x_6)) + ((x_4 - x_7) * (x_4 - x_7))) + ((x_5 - x_8) * (x_5 - x_8)))))))) + ((0.1 *  (-( (-(0.55 * ((0.5 * ((x_5 - x_8) + (x_5 - x_8))) / sqrt(((((x_3 - x_6) * (x_3 - x_6)) + ((x_4 - x_7) * (x_4 - x_7))) + ((x_5 - x_8) * (x_5 - x_8))))))) / (sqrt(((((x_3 - x_6) * (x_3 - x_6)) + ((x_4 - x_7) * (x_4 - x_7))) + ((x_5 - x_8) * (x_5 - x_8)))) * sqrt(((((x_3 - x_6) * (x_3 - x_6)) + ((x_4 - x_7) * (x_4 - x_7))) + ((x_5 - x_8) * (x_5 - x_8)))))))) * ( (-x_5) + x_8)))));
    df_dx[363] = (8.88889 * ((0.1 *  (-( (-(0.55 * ((0.5 * ( (-(x_3 - x_6)) +  (-(x_3 - x_6)))) / sqrt(((((x_3 - x_6) * (x_3 - x_6)) + ((x_4 - x_7) * (x_4 - x_7))) + ((x_5 - x_8) * (x_5 - x_8))))))) / (sqrt(((((x_3 - x_6) * (x_3 - x_6)) + ((x_4 - x_7) * (x_4 - x_7))) + ((x_5 - x_8) * (x_5 - x_8)))) * sqrt(((((x_3 - x_6) * (x_3 - x_6)) + ((x_4 - x_7) * (x_4 - x_7))) + ((x_5 - x_8) * (x_5 - x_8)))))))) * ( (-x_5) + x_8)));
    df_dx[364] = (8.88889 * ((0.1 *  (-( (-(0.55 * ((0.5 * ( (-(x_4 - x_7)) +  (-(x_4 - x_7)))) / sqrt(((((x_3 - x_6) * (x_3 - x_6)) + ((x_4 - x_7) * (x_4 - x_7))) + ((x_5 - x_8) * (x_5 - x_8))))))) / (sqrt(((((x_3 - x_6) * (x_3 - x_6)) + ((x_4 - x_7) * (x_4 - x_7))) + ((x_5 - x_8) * (x_5 - x_8)))) * sqrt(((((x_3 - x_6) * (x_3 - x_6)) + ((x_4 - x_7) * (x_4 - x_7))) + ((x_5 - x_8) * (x_5 - x_8)))))))) * ( (-x_5) + x_8)));
    df_dx[365] = (8.88889 * ((0.1 * (4 - (0.55 / sqrt(((((x_3 - x_6) * (x_3 - x_6)) + ((x_4 - x_7) * (x_4 - x_7))) + ((x_5 - x_8) * (x_5 - x_8))))))) + ((0.1 *  (-( (-(0.55 * ((0.5 * ( (-(x_5 - x_8)) +  (-(x_5 - x_8)))) / sqrt(((((x_3 - x_6) * (x_3 - x_6)) + ((x_4 - x_7) * (x_4 - x_7))) + ((x_5 - x_8) * (x_5 - x_8))))))) / (sqrt(((((x_3 - x_6) * (x_3 - x_6)) + ((x_4 - x_7) * (x_4 - x_7))) + ((x_5 - x_8) * (x_5 - x_8)))) * sqrt(((((x_3 - x_6) * (x_3 - x_6)) + ((x_4 - x_7) * (x_4 - x_7))) + ((x_5 - x_8) * (x_5 - x_8)))))))) * ( (-x_5) + x_8))));
    df_dx[366] = 0;
    df_dx[367] = 0;
    df_dx[368] = 0;
    df_dx[369] = 0;
    df_dx[370] = 0;
    df_dx[371] = 0;
    df_dx[372] = 0;
    df_dx[373] = 0;
    df_dx[374] = 0;
    df_dx[375] = 0;
    df_dx[376] = 0;
    df_dx[377] = 0;
    df_dx[378] = 0;
    df_dx[379] = 0;
    df_dx[380] = 0;
    df_dx[381] = (8.88889 * ( (-(-0.1 * (4 - (0.55 / sqrt(((((x_3 - x_6) * (x_3 - x_6)) + ((x_4 - x_7) * (x_4 - x_7))) + ((x_5 - x_8) * (x_5 - x_8)))))))) + ((-0.1 *  (-( (-(0.55 * ((0.5 * ((x_3 - x_6) + (x_3 - x_6))) / sqrt(((((x_3 - x_6) * (x_3 - x_6)) + ((x_4 - x_7) * (x_4 - x_7))) + ((x_5 - x_8) * (x_5 - x_8))))))) / (sqrt(((((x_3 - x_6) * (x_3 - x_6)) + ((x_4 - x_7) * (x_4 - x_7))) + ((x_5 - x_8) * (x_5 - x_8)))) * sqrt(((((x_3 - x_6) * (x_3 - x_6)) + ((x_4 - x_7) * (x_4 - x_7))) + ((x_5 - x_8) * (x_5 - x_8)))))))) * ( (-x_3) + x_6))));
    df_dx[382] = (8.88889 * ((-0.1 *  (-( (-(0.55 * ((0.5 * ((x_4 - x_7) + (x_4 - x_7))) / sqrt(((((x_3 - x_6) * (x_3 - x_6)) + ((x_4 - x_7) * (x_4 - x_7))) + ((x_5 - x_8) * (x_5 - x_8))))))) / (sqrt(((((x_3 - x_6) * (x_3 - x_6)) + ((x_4 - x_7) * (x_4 - x_7))) + ((x_5 - x_8) * (x_5 - x_8)))) * sqrt(((((x_3 - x_6) * (x_3 - x_6)) + ((x_4 - x_7) * (x_4 - x_7))) + ((x_5 - x_8) * (x_5 - x_8)))))))) * ( (-x_3) + x_6)));
    df_dx[383] = (8.88889 * ((-0.1 *  (-( (-(0.55 * ((0.5 * ((x_5 - x_8) + (x_5 - x_8))) / sqrt(((((x_3 - x_6) * (x_3 - x_6)) + ((x_4 - x_7) * (x_4 - x_7))) + ((x_5 - x_8) * (x_5 - x_8))))))) / (sqrt(((((x_3 - x_6) * (x_3 - x_6)) + ((x_4 - x_7) * (x_4 - x_7))) + ((x_5 - x_8) * (x_5 - x_8)))) * sqrt(((((x_3 - x_6) * (x_3 - x_6)) + ((x_4 - x_7) * (x_4 - x_7))) + ((x_5 - x_8) * (x_5 - x_8)))))))) * ( (-x_3) + x_6)));
    df_dx[384] = (8.88889 * (((-0.1 * (4 - (0.55 / sqrt(((((x_3 - x_6) * (x_3 - x_6)) + ((x_4 - x_7) * (x_4 - x_7))) + ((x_5 - x_8) * (x_5 - x_8))))))) + ((-0.1 *  (-( (-(0.55 * ((0.5 * ( (-(x_3 - x_6)) +  (-(x_3 - x_6)))) / sqrt(((((x_3 - x_6) * (x_3 - x_6)) + ((x_4 - x_7) * (x_4 - x_7))) + ((x_5 - x_8) * (x_5 - x_8))))))) / (sqrt(((((x_3 - x_6) * (x_3 - x_6)) + ((x_4 - x_7) * (x_4 - x_7))) + ((x_5 - x_8) * (x_5 - x_8)))) * sqrt(((((x_3 - x_6) * (x_3 - x_6)) + ((x_4 - x_7) * (x_4 - x_7))) + ((x_5 - x_8) * (x_5 - x_8)))))))) * ( (-x_3) + x_6))) + ( (-(0.1 * (4 - (0.55 / sqrt(((((x_6 - x_9) * (x_6 - x_9)) + ((x_7 - x_10) * (x_7 - x_10))) + ((x_8 - x_11) * (x_8 - x_11)))))))) + ((0.1 *  (-( (-(0.55 * ((0.5 * ((x_6 - x_9) + (x_6 - x_9))) / sqrt(((((x_6 - x_9) * (x_6 - x_9)) + ((x_7 - x_10) * (x_7 - x_10))) + ((x_8 - x_11) * (x_8 - x_11))))))) / (sqrt(((((x_6 - x_9) * (x_6 - x_9)) + ((x_7 - x_10) * (x_7 - x_10))) + ((x_8 - x_11) * (x_8 - x_11)))) * sqrt(((((x_6 - x_9) * (x_6 - x_9)) + ((x_7 - x_10) * (x_7 - x_10))) + ((x_8 - x_11) * (x_8 - x_11)))))))) * ( (-x_6) + x_9)))));
    df_dx[385] = (8.88889 * (((-0.1 *  (-( (-(0.55 * ((0.5 * ( (-(x_4 - x_7)) +  (-(x_4 - x_7)))) / sqrt(((((x_3 - x_6) * (x_3 - x_6)) + ((x_4 - x_7) * (x_4 - x_7))) + ((x_5 - x_8) * (x_5 - x_8))))))) / (sqrt(((((x_3 - x_6) * (x_3 - x_6)) + ((x_4 - x_7) * (x_4 - x_7))) + ((x_5 - x_8) * (x_5 - x_8)))) * sqrt(((((x_3 - x_6) * (x_3 - x_6)) + ((x_4 - x_7) * (x_4 - x_7))) + ((x_5 - x_8) * (x_5 - x_8)))))))) * ( (-x_3) + x_6)) + ((0.1 *  (-( (-(0.55 * ((0.5 * ((x_7 - x_10) + (x_7 - x_10))) / sqrt(((((x_6 - x_9) * (x_6 - x_9)) + ((x_7 - x_10) * (x_7 - x_10))) + ((x_8 - x_11) * (x_8 - x_11))))))) / (sqrt(((((x_6 - x_9) * (x_6 - x_9)) + ((x_7 - x_10) * (x_7 - x_10))) + ((x_8 - x_11) * (x_8 - x_11)))) * sqrt(((((x_6 - x_9) * (x_6 - x_9)) + ((x_7 - x_10) * (x_7 - x_10))) + ((x_8 - x_11) * (x_8 - x_11)))))))) * ( (-x_6) + x_9))));
    df_dx[386] = (8.88889 * (((-0.1 *  (-( (-(0.55 * ((0.5 * ( (-(x_5 - x_8)) +  (-(x_5 - x_8)))) / sqrt(((((x_3 - x_6) * (x_3 - x_6)) + ((x_4 - x_7) * (x_4 - x_7))) + ((x_5 - x_8) * (x_5 - x_8))))))) / (sqrt(((((x_3 - x_6) * (x_3 - x_6)) + ((x_4 - x_7) * (x_4 - x_7))) + ((x_5 - x_8) * (x_5 - x_8)))) * sqrt(((((x_3 - x_6) * (x_3 - x_6)) + ((x_4 - x_7) * (x_4 - x_7))) + ((x_5 - x_8) * (x_5 - x_8)))))))) * ( (-x_3) + x_6)) + ((0.1 *  (-( (-(0.55 * ((0.5 * ((x_8 - x_11) + (x_8 - x_11))) / sqrt(((((x_6 - x_9) * (x_6 - x_9)) + ((x_7 - x_10) * (x_7 - x_10))) + ((x_8 - x_11) * (x_8 - x_11))))))) / (sqrt(((((x_6 - x_9) * (x_6 - x_9)) + ((x_7 - x_10) * (x_7 - x_10))) + ((x_8 - x_11) * (x_8 - x_11)))) * sqrt(((((x_6 - x_9) * (x_6 - x_9)) + ((x_7 - x_10) * (x_7 - x_10))) + ((x_8 - x_11) * (x_8 - x_11)))))))) * ( (-x_6) + x_9))));
    df_dx[387] = (8.88889 * ((0.1 * (4 - (0.55 / sqrt(((((x_6 - x_9) * (x_6 - x_9)) + ((x_7 - x_10) * (x_7 - x_10))) + ((x_8 - x_11) * (x_8 - x_11))))))) + ((0.1 *  (-( (-(0.55 * ((0.5 * ( (-(x_6 - x_9)) +  (-(x_6 - x_9)))) / sqrt(((((x_6 - x_9) * (x_6 - x_9)) + ((x_7 - x_10) * (x_7 - x_10))) + ((x_8 - x_11) * (x_8 - x_11))))))) / (sqrt(((((x_6 - x_9) * (x_6 - x_9)) + ((x_7 - x_10) * (x_7 - x_10))) + ((x_8 - x_11) * (x_8 - x_11)))) * sqrt(((((x_6 - x_9) * (x_6 - x_9)) + ((x_7 - x_10) * (x_7 - x_10))) + ((x_8 - x_11) * (x_8 - x_11)))))))) * ( (-x_6) + x_9))));
    df_dx[388] = (8.88889 * ((0.1 *  (-( (-(0.55 * ((0.5 * ( (-(x_7 - x_10)) +  (-(x_7 - x_10)))) / sqrt(((((x_6 - x_9) * (x_6 - x_9)) + ((x_7 - x_10) * (x_7 - x_10))) + ((x_8 - x_11) * (x_8 - x_11))))))) / (sqrt(((((x_6 - x_9) * (x_6 - x_9)) + ((x_7 - x_10) * (x_7 - x_10))) + ((x_8 - x_11) * (x_8 - x_11)))) * sqrt(((((x_6 - x_9) * (x_6 - x_9)) + ((x_7 - x_10) * (x_7 - x_10))) + ((x_8 - x_11) * (x_8 - x_11)))))))) * ( (-x_6) + x_9)));
    df_dx[389] = (8.88889 * ((0.1 *  (-( (-(0.55 * ((0.5 * ( (-(x_8 - x_11)) +  (-(x_8 - x_11)))) / sqrt(((((x_6 - x_9) * (x_6 - x_9)) + ((x_7 - x_10) * (x_7 - x_10))) + ((x_8 - x_11) * (x_8 - x_11))))))) / (sqrt(((((x_6 - x_9) * (x_6 - x_9)) + ((x_7 - x_10) * (x_7 - x_10))) + ((x_8 - x_11) * (x_8 - x_11)))) * sqrt(((((x_6 - x_9) * (x_6 - x_9)) + ((x_7 - x_10) * (x_7 - x_10))) + ((x_8 - x_11) * (x_8 - x_11)))))))) * ( (-x_6) + x_9)));
    df_dx[390] = 0;
    df_dx[391] = 0;
    df_dx[392] = 0;
    df_dx[393] = 0;
    df_dx[394] = 0;
    df_dx[395] = 0;
    df_dx[396] = 0;
    df_dx[397] = 0;
    df_dx[398] = 0;
    df_dx[399] = 0;
    df_dx[400] = 0;
    df_dx[401] = 0;
    df_dx[402] = (8.88889 * ((-0.1 *  (-( (-(0.55 * ((0.5 * ((x_3 - x_6) + (x_3 - x_6))) / sqrt(((((x_3 - x_6) * (x_3 - x_6)) + ((x_4 - x_7) * (x_4 - x_7))) + ((x_5 - x_8) * (x_5 - x_8))))))) / (sqrt(((((x_3 - x_6) * (x_3 - x_6)) + ((x_4 - x_7) * (x_4 - x_7))) + ((x_5 - x_8) * (x_5 - x_8)))) * sqrt(((((x_3 - x_6) * (x_3 - x_6)) + ((x_4 - x_7) * (x_4 - x_7))) + ((x_5 - x_8) * (x_5 - x_8)))))))) * ( (-x_4) + x_7)));
    df_dx[403] = (8.88889 * ( (-(-0.1 * (4 - (0.55 / sqrt(((((x_3 - x_6) * (x_3 - x_6)) + ((x_4 - x_7) * (x_4 - x_7))) + ((x_5 - x_8) * (x_5 - x_8)))))))) + ((-0.1 *  (-( (-(0.55 * ((0.5 * ((x_4 - x_7) + (x_4 - x_7))) / sqrt(((((x_3 - x_6) * (x_3 - x_6)) + ((x_4 - x_7) * (x_4 - x_7))) + ((x_5 - x_8) * (x_5 - x_8))))))) / (sqrt(((((x_3 - x_6) * (x_3 - x_6)) + ((x_4 - x_7) * (x_4 - x_7))) + ((x_5 - x_8) * (x_5 - x_8)))) * sqrt(((((x_3 - x_6) * (x_3 - x_6)) + ((x_4 - x_7) * (x_4 - x_7))) + ((x_5 - x_8) * (x_5 - x_8)))))))) * ( (-x_4) + x_7))));
    df_dx[404] = (8.88889 * ((-0.1 *  (-( (-(0.55 * ((0.5 * ((x_5 - x_8) + (x_5 - x_8))) / sqrt(((((x_3 - x_6) * (x_3 - x_6)) + ((x_4 - x_7) * (x_4 - x_7))) + ((x_5 - x_8) * (x_5 - x_8))))))) / (sqrt(((((x_3 - x_6) * (x_3 - x_6)) + ((x_4 - x_7) * (x_4 - x_7))) + ((x_5 - x_8) * (x_5 - x_8)))) * sqrt(((((x_3 - x_6) * (x_3 - x_6)) + ((x_4 - x_7) * (x_4 - x_7))) + ((x_5 - x_8) * (x_5 - x_8)))))))) * ( (-x_4) + x_7)));
    df_dx[405] = (8.88889 * (((-0.1 *  (-( (-(0.55 * ((0.5 * ( (-(x_3 - x_6)) +  (-(x_3 - x_6)))) / sqrt(((((x_3 - x_6) * (x_3 - x_6)) + ((x_4 - x_7) * (x_4 - x_7))) + ((x_5 - x_8) * (x_5 - x_8))))))) / (sqrt(((((x_3 - x_6) * (x_3 - x_6)) + ((x_4 - x_7) * (x_4 - x_7))) + ((x_5 - x_8) * (x_5 - x_8)))) * sqrt(((((x_3 - x_6) * (x_3 - x_6)) + ((x_4 - x_7) * (x_4 - x_7))) + ((x_5 - x_8) * (x_5 - x_8)))))))) * ( (-x_4) + x_7)) + ((0.1 *  (-( (-(0.55 * ((0.5 * ((x_6 - x_9) + (x_6 - x_9))) / sqrt(((((x_6 - x_9) * (x_6 - x_9)) + ((x_7 - x_10) * (x_7 - x_10))) + ((x_8 - x_11) * (x_8 - x_11))))))) / (sqrt(((((x_6 - x_9) * (x_6 - x_9)) + ((x_7 - x_10) * (x_7 - x_10))) + ((x_8 - x_11) * (x_8 - x_11)))) * sqrt(((((x_6 - x_9) * (x_6 - x_9)) + ((x_7 - x_10) * (x_7 - x_10))) + ((x_8 - x_11) * (x_8 - x_11)))))))) * ( (-x_7) + x_10))));
    df_dx[406] = (8.88889 * (((-0.1 * (4 - (0.55 / sqrt(((((x_3 - x_6) * (x_3 - x_6)) + ((x_4 - x_7) * (x_4 - x_7))) + ((x_5 - x_8) * (x_5 - x_8))))))) + ((-0.1 *  (-( (-(0.55 * ((0.5 * ( (-(x_4 - x_7)) +  (-(x_4 - x_7)))) / sqrt(((((x_3 - x_6) * (x_3 - x_6)) + ((x_4 - x_7) * (x_4 - x_7))) + ((x_5 - x_8) * (x_5 - x_8))))))) / (sqrt(((((x_3 - x_6) * (x_3 - x_6)) + ((x_4 - x_7) * (x_4 - x_7))) + ((x_5 - x_8) * (x_5 - x_8)))) * sqrt(((((x_3 - x_6) * (x_3 - x_6)) + ((x_4 - x_7) * (x_4 - x_7))) + ((x_5 - x_8) * (x_5 - x_8)))))))) * ( (-x_4) + x_7))) + ( (-(0.1 * (4 - (0.55 / sqrt(((((x_6 - x_9) * (x_6 - x_9)) + ((x_7 - x_10) * (x_7 - x_10))) + ((x_8 - x_11) * (x_8 - x_11)))))))) + ((0.1 *  (-( (-(0.55 * ((0.5 * ((x_7 - x_10) + (x_7 - x_10))) / sqrt(((((x_6 - x_9) * (x_6 - x_9)) + ((x_7 - x_10) * (x_7 - x_10))) + ((x_8 - x_11) * (x_8 - x_11))))))) / (sqrt(((((x_6 - x_9) * (x_6 - x_9)) + ((x_7 - x_10) * (x_7 - x_10))) + ((x_8 - x_11) * (x_8 - x_11)))) * sqrt(((((x_6 - x_9) * (x_6 - x_9)) + ((x_7 - x_10) * (x_7 - x_10))) + ((x_8 - x_11) * (x_8 - x_11)))))))) * ( (-x_7) + x_10)))));
    df_dx[407] = (8.88889 * (((-0.1 *  (-( (-(0.55 * ((0.5 * ( (-(x_5 - x_8)) +  (-(x_5 - x_8)))) / sqrt(((((x_3 - x_6) * (x_3 - x_6)) + ((x_4 - x_7) * (x_4 - x_7))) + ((x_5 - x_8) * (x_5 - x_8))))))) / (sqrt(((((x_3 - x_6) * (x_3 - x_6)) + ((x_4 - x_7) * (x_4 - x_7))) + ((x_5 - x_8) * (x_5 - x_8)))) * sqrt(((((x_3 - x_6) * (x_3 - x_6)) + ((x_4 - x_7) * (x_4 - x_7))) + ((x_5 - x_8) * (x_5 - x_8)))))))) * ( (-x_4) + x_7)) + ((0.1 *  (-( (-(0.55 * ((0.5 * ((x_8 - x_11) + (x_8 - x_11))) / sqrt(((((x_6 - x_9) * (x_6 - x_9)) + ((x_7 - x_10) * (x_7 - x_10))) + ((x_8 - x_11) * (x_8 - x_11))))))) / (sqrt(((((x_6 - x_9) * (x_6 - x_9)) + ((x_7 - x_10) * (x_7 - x_10))) + ((x_8 - x_11) * (x_8 - x_11)))) * sqrt(((((x_6 - x_9) * (x_6 - x_9)) + ((x_7 - x_10) * (x_7 - x_10))) + ((x_8 - x_11) * (x_8 - x_11)))))))) * ( (-x_7) + x_10))));
    df_dx[408] = (8.88889 * ((0.1 *  (-( (-(0.55 * ((0.5 * ( (-(x_6 - x_9)) +  (-(x_6 - x_9)))) / sqrt(((((x_6 - x_9) * (x_6 - x_9)) + ((x_7 - x_10) * (x_7 - x_10))) + ((x_8 - x_11) * (x_8 - x_11))))))) / (sqrt(((((x_6 - x_9) * (x_6 - x_9)) + ((x_7 - x_10) * (x_7 - x_10))) + ((x_8 - x_11) * (x_8 - x_11)))) * sqrt(((((x_6 - x_9) * (x_6 - x_9)) + ((x_7 - x_10) * (x_7 - x_10))) + ((x_8 - x_11) * (x_8 - x_11)))))))) * ( (-x_7) + x_10)));
    df_dx[409] = (8.88889 * ((0.1 * (4 - (0.55 / sqrt(((((x_6 - x_9) * (x_6 - x_9)) + ((x_7 - x_10) * (x_7 - x_10))) + ((x_8 - x_11) * (x_8 - x_11))))))) + ((0.1 *  (-( (-(0.55 * ((0.5 * ( (-(x_7 - x_10)) +  (-(x_7 - x_10)))) / sqrt(((((x_6 - x_9) * (x_6 - x_9)) + ((x_7 - x_10) * (x_7 - x_10))) + ((x_8 - x_11) * (x_8 - x_11))))))) / (sqrt(((((x_6 - x_9) * (x_6 - x_9)) + ((x_7 - x_10) * (x_7 - x_10))) + ((x_8 - x_11) * (x_8 - x_11)))) * sqrt(((((x_6 - x_9) * (x_6 - x_9)) + ((x_7 - x_10) * (x_7 - x_10))) + ((x_8 - x_11) * (x_8 - x_11)))))))) * ( (-x_7) + x_10))));
    df_dx[410] = (8.88889 * ((0.1 *  (-( (-(0.55 * ((0.5 * ( (-(x_8 - x_11)) +  (-(x_8 - x_11)))) / sqrt(((((x_6 - x_9) * (x_6 - x_9)) + ((x_7 - x_10) * (x_7 - x_10))) + ((x_8 - x_11) * (x_8 - x_11))))))) / (sqrt(((((x_6 - x_9) * (x_6 - x_9)) + ((x_7 - x_10) * (x_7 - x_10))) + ((x_8 - x_11) * (x_8 - x_11)))) * sqrt(((((x_6 - x_9) * (x_6 - x_9)) + ((x_7 - x_10) * (x_7 - x_10))) + ((x_8 - x_11) * (x_8 - x_11)))))))) * ( (-x_7) + x_10)));
    df_dx[411] = 0;
    df_dx[412] = 0;
    df_dx[413] = 0;
    df_dx[414] = 0;
    df_dx[415] = 0;
    df_dx[416] = 0;
    df_dx[417] = 0;
    df_dx[418] = 0;
    df_dx[419] = 0;
    df_dx[420] = 0;
    df_dx[421] = 0;
    df_dx[422] = 0;
    df_dx[423] = (8.88889 * ((-0.1 *  (-( (-(0.55 * ((0.5 * ((x_3 - x_6) + (x_3 - x_6))) / sqrt(((((x_3 - x_6) * (x_3 - x_6)) + ((x_4 - x_7) * (x_4 - x_7))) + ((x_5 - x_8) * (x_5 - x_8))))))) / (sqrt(((((x_3 - x_6) * (x_3 - x_6)) + ((x_4 - x_7) * (x_4 - x_7))) + ((x_5 - x_8) * (x_5 - x_8)))) * sqrt(((((x_3 - x_6) * (x_3 - x_6)) + ((x_4 - x_7) * (x_4 - x_7))) + ((x_5 - x_8) * (x_5 - x_8)))))))) * ( (-x_5) + x_8)));
    df_dx[424] = (8.88889 * ((-0.1 *  (-( (-(0.55 * ((0.5 * ((x_4 - x_7) + (x_4 - x_7))) / sqrt(((((x_3 - x_6) * (x_3 - x_6)) + ((x_4 - x_7) * (x_4 - x_7))) + ((x_5 - x_8) * (x_5 - x_8))))))) / (sqrt(((((x_3 - x_6) * (x_3 - x_6)) + ((x_4 - x_7) * (x_4 - x_7))) + ((x_5 - x_8) * (x_5 - x_8)))) * sqrt(((((x_3 - x_6) * (x_3 - x_6)) + ((x_4 - x_7) * (x_4 - x_7))) + ((x_5 - x_8) * (x_5 - x_8)))))))) * ( (-x_5) + x_8)));
    df_dx[425] = (8.88889 * ( (-(-0.1 * (4 - (0.55 / sqrt(((((x_3 - x_6) * (x_3 - x_6)) + ((x_4 - x_7) * (x_4 - x_7))) + ((x_5 - x_8) * (x_5 - x_8)))))))) + ((-0.1 *  (-( (-(0.55 * ((0.5 * ((x_5 - x_8) + (x_5 - x_8))) / sqrt(((((x_3 - x_6) * (x_3 - x_6)) + ((x_4 - x_7) * (x_4 - x_7))) + ((x_5 - x_8) * (x_5 - x_8))))))) / (sqrt(((((x_3 - x_6) * (x_3 - x_6)) + ((x_4 - x_7) * (x_4 - x_7))) + ((x_5 - x_8) * (x_5 - x_8)))) * sqrt(((((x_3 - x_6) * (x_3 - x_6)) + ((x_4 - x_7) * (x_4 - x_7))) + ((x_5 - x_8) * (x_5 - x_8)))))))) * ( (-x_5) + x_8))));
    df_dx[426] = (8.88889 * (((-0.1 *  (-( (-(0.55 * ((0.5 * ( (-(x_3 - x_6)) +  (-(x_3 - x_6)))) / sqrt(((((x_3 - x_6) * (x_3 - x_6)) + ((x_4 - x_7) * (x_4 - x_7))) + ((x_5 - x_8) * (x_5 - x_8))))))) / (sqrt(((((x_3 - x_6) * (x_3 - x_6)) + ((x_4 - x_7) * (x_4 - x_7))) + ((x_5 - x_8) * (x_5 - x_8)))) * sqrt(((((x_3 - x_6) * (x_3 - x_6)) + ((x_4 - x_7) * (x_4 - x_7))) + ((x_5 - x_8) * (x_5 - x_8)))))))) * ( (-x_5) + x_8)) + ((0.1 *  (-( (-(0.55 * ((0.5 * ((x_6 - x_9) + (x_6 - x_9))) / sqrt(((((x_6 - x_9) * (x_6 - x_9)) + ((x_7 - x_10) * (x_7 - x_10))) + ((x_8 - x_11) * (x_8 - x_11))))))) / (sqrt(((((x_6 - x_9) * (x_6 - x_9)) + ((x_7 - x_10) * (x_7 - x_10))) + ((x_8 - x_11) * (x_8 - x_11)))) * sqrt(((((x_6 - x_9) * (x_6 - x_9)) + ((x_7 - x_10) * (x_7 - x_10))) + ((x_8 - x_11) * (x_8 - x_11)))))))) * ( (-x_8) + x_11))));
    df_dx[427] = (8.88889 * (((-0.1 *  (-( (-(0.55 * ((0.5 * ( (-(x_4 - x_7)) +  (-(x_4 - x_7)))) / sqrt(((((x_3 - x_6) * (x_3 - x_6)) + ((x_4 - x_7) * (x_4 - x_7))) + ((x_5 - x_8) * (x_5 - x_8))))))) / (sqrt(((((x_3 - x_6) * (x_3 - x_6)) + ((x_4 - x_7) * (x_4 - x_7))) + ((x_5 - x_8) * (x_5 - x_8)))) * sqrt(((((x_3 - x_6) * (x_3 - x_6)) + ((x_4 - x_7) * (x_4 - x_7))) + ((x_5 - x_8) * (x_5 - x_8)))))))) * ( (-x_5) + x_8)) + ((0.1 *  (-( (-(0.55 * ((0.5 * ((x_7 - x_10) + (x_7 - x_10))) / sqrt(((((x_6 - x_9) * (x_6 - x_9)) + ((x_7 - x_10) * (x_7 - x_10))) + ((x_8 - x_11) * (x_8 - x_11))))))) / (sqrt(((((x_6 - x_9) * (x_6 - x_9)) + ((x_7 - x_10) * (x_7 - x_10))) + ((x_8 - x_11) * (x_8 - x_11)))) * sqrt(((((x_6 - x_9) * (x_6 - x_9)) + ((x_7 - x_10) * (x_7 - x_10))) + ((x_8 - x_11) * (x_8 - x_11)))))))) * ( (-x_8) + x_11))));
    df_dx[428] = (8.88889 * (((-0.1 * (4 - (0.55 / sqrt(((((x_3 - x_6) * (x_3 - x_6)) + ((x_4 - x_7) * (x_4 - x_7))) + ((x_5 - x_8) * (x_5 - x_8))))))) + ((-0.1 *  (-( (-(0.55 * ((0.5 * ( (-(x_5 - x_8)) +  (-(x_5 - x_8)))) / sqrt(((((x_3 - x_6) * (x_3 - x_6)) + ((x_4 - x_7) * (x_4 - x_7))) + ((x_5 - x_8) * (x_5 - x_8))))))) / (sqrt(((((x_3 - x_6) * (x_3 - x_6)) + ((x_4 - x_7) * (x_4 - x_7))) + ((x_5 - x_8) * (x_5 - x_8)))) * sqrt(((((x_3 - x_6) * (x_3 - x_6)) + ((x_4 - x_7) * (x_4 - x_7))) + ((x_5 - x_8) * (x_5 - x_8)))))))) * ( (-x_5) + x_8))) + ( (-(0.1 * (4 - (0.55 / sqrt(((((x_6 - x_9) * (x_6 - x_9)) + ((x_7 - x_10) * (x_7 - x_10))) + ((x_8 - x_11) * (x_8 - x_11)))))))) + ((0.1 *  (-( (-(0.55 * ((0.5 * ((x_8 - x_11) + (x_8 - x_11))) / sqrt(((((x_6 - x_9) * (x_6 - x_9)) + ((x_7 - x_10) * (x_7 - x_10))) + ((x_8 - x_11) * (x_8 - x_11))))))) / (sqrt(((((x_6 - x_9) * (x_6 - x_9)) + ((x_7 - x_10) * (x_7 - x_10))) + ((x_8 - x_11) * (x_8 - x_11)))) * sqrt(((((x_6 - x_9) * (x_6 - x_9)) + ((x_7 - x_10) * (x_7 - x_10))) + ((x_8 - x_11) * (x_8 - x_11)))))))) * ( (-x_8) + x_11)))));
    df_dx[429] = (8.88889 * ((0.1 *  (-( (-(0.55 * ((0.5 * ( (-(x_6 - x_9)) +  (-(x_6 - x_9)))) / sqrt(((((x_6 - x_9) * (x_6 - x_9)) + ((x_7 - x_10) * (x_7 - x_10))) + ((x_8 - x_11) * (x_8 - x_11))))))) / (sqrt(((((x_6 - x_9) * (x_6 - x_9)) + ((x_7 - x_10) * (x_7 - x_10))) + ((x_8 - x_11) * (x_8 - x_11)))) * sqrt(((((x_6 - x_9) * (x_6 - x_9)) + ((x_7 - x_10) * (x_7 - x_10))) + ((x_8 - x_11) * (x_8 - x_11)))))))) * ( (-x_8) + x_11)));
    df_dx[430] = (8.88889 * ((0.1 *  (-( (-(0.55 * ((0.5 * ( (-(x_7 - x_10)) +  (-(x_7 - x_10)))) / sqrt(((((x_6 - x_9) * (x_6 - x_9)) + ((x_7 - x_10) * (x_7 - x_10))) + ((x_8 - x_11) * (x_8 - x_11))))))) / (sqrt(((((x_6 - x_9) * (x_6 - x_9)) + ((x_7 - x_10) * (x_7 - x_10))) + ((x_8 - x_11) * (x_8 - x_11)))) * sqrt(((((x_6 - x_9) * (x_6 - x_9)) + ((x_7 - x_10) * (x_7 - x_10))) + ((x_8 - x_11) * (x_8 - x_11)))))))) * ( (-x_8) + x_11)));
    df_dx[431] = (8.88889 * ((0.1 * (4 - (0.55 / sqrt(((((x_6 - x_9) * (x_6 - x_9)) + ((x_7 - x_10) * (x_7 - x_10))) + ((x_8 - x_11) * (x_8 - x_11))))))) + ((0.1 *  (-( (-(0.55 * ((0.5 * ( (-(x_8 - x_11)) +  (-(x_8 - x_11)))) / sqrt(((((x_6 - x_9) * (x_6 - x_9)) + ((x_7 - x_10) * (x_7 - x_10))) + ((x_8 - x_11) * (x_8 - x_11))))))) / (sqrt(((((x_6 - x_9) * (x_6 - x_9)) + ((x_7 - x_10) * (x_7 - x_10))) + ((x_8 - x_11) * (x_8 - x_11)))) * sqrt(((((x_6 - x_9) * (x_6 - x_9)) + ((x_7 - x_10) * (x_7 - x_10))) + ((x_8 - x_11) * (x_8 - x_11)))))))) * ( (-x_8) + x_11))));
    df_dx[432] = 0;
    df_dx[433] = 0;
    df_dx[434] = 0;
    df_dx[435] = 0;
    df_dx[436] = 0;
    df_dx[437] = 0;
    df_dx[438] = 0;
    df_dx[439] = 0;
    df_dx[440] = 0;

    df_du[0] = 0;
    df_du[1] = 0;
    df_du[2] = 0;
    df_du[3] = 0;
    df_du[4] = 0;
    df_du[5] = 0;
    df_du[6] = 0;
    df_du[7] = 0;
    df_du[8] = 0;
    df_du[9] = 0;
    df_du[10] = 0;
    df_du[11] = 0;
    df_du[12] = 0;
    df_du[13] = 0;
    df_du[14] = 0;
    df_du[15] = 0;
    df_du[16] = 0;
    df_du[17] = 0;
    df_du[18] = 0;
    df_du[19] = 0;
    df_du[20] = 0;
    df_du[21] = 0;
    df_du[22] = 0;
    df_du[23] = 0;
    df_du[24] = 0;
    df_du[25] = 0;
    df_du[26] = 0;
    df_du[27] = 1;
    df_du[28] = 0;
    df_du[29] = 0;
    df_du[30] = 0;
    df_du[31] = 1;
    df_du[32] = 0;
    df_du[33] = 0;
    df_du[34] = 0;
    df_du[35] = 1;
    df_du[36] = 0;
    df_du[37] = 0;
    df_du[38] = 0;
    df_du[39] = 0;
    df_du[40] = 0;
    df_du[41] = 0;
    df_du[42] = 0;
    df_du[43] = 0;
    df_du[44] = 0;
    df_du[45] = 0;
    df_du[46] = 0;
    df_du[47] = 0;
    df_du[48] = 0;
    df_du[49] = 0;
    df_du[50] = 0;
    df_du[51] = 0;
    df_du[52] = 0;
    df_du[53] = 0;
    df_du[54] = 0;
    df_du[55] = 0;
    df_du[56] = 0;
    df_du[57] = 0;
    df_du[58] = 0;
    df_du[59] = 0;
    df_du[60] = 0;
    df_du[61] = 0;
    df_du[62] = 0;
}

void NMPCProblem::evaluateDynamicsLinearDerivatives(REAL_TYPE *df_dx, REAL_TYPE *df_du)
{


}

void NMPCProblem::initializeIntegrator()
{
    ALin = new REAL_TYPE[numStates*numStates];
    ATemp = new REAL_TYPE[numStates*numStates];
    MTemp = new REAL_TYPE[numStates*(numStates > numControls ? numStates : numControls)];
    dk1_dx = new REAL_TYPE[numStates*numStates];
    dk2_dx = new REAL_TYPE[numStates*numStates];
    dk3_dx = new REAL_TYPE[numStates*numStates];
    dk4_dx = new REAL_TYPE[numStates*numStates];
    BTemp = new REAL_TYPE[numStates*numControls];
    BLin = new REAL_TYPE[numStates*numControls];
    dk1_du = new REAL_TYPE[numStates*numControls];
    dk2_du = new REAL_TYPE[numStates*numControls];
    dk3_du = new REAL_TYPE[numStates*numControls];
    dk4_du = new REAL_TYPE[numStates*numControls];
    xTemp = new REAL_TYPE[numStates];
    k1 = new REAL_TYPE[numStates];
    k2 = new REAL_TYPE[numStates];
    k3 = new REAL_TYPE[numStates];
    k4 = new REAL_TYPE[numStates];

    int i,j,k;

    for(i = 0; i < numStates*numStates; i++)
        ALin[i] = ATemp[i] = MTemp[i]  = dk1_dx[i] = dk2_dx[i] = dk3_dx[i] = dk4_dx[i] = 0;

    for(i = 0; i < numStates*numControls; i++)
        BLin[i] = BTemp[i] = MTemp[i]  = dk1_du[i] = dk2_du[i] = dk3_du[i] = dk4_du[i] = 0;

    /*Initialize constant parts*/
    /*dk1/dx = ATemp = df(x,u)/dx*/
    /*dk1/du = BTemp = df(x,u)/du*/
    evaluateDynamicsLinearDerivatives(dk1_dx, dk1_du);
    evaluateDynamicsLinearDerivatives(ATemp, BTemp);


    /*MTemp = I + dt*(0.5 * dk1/dx)*/
    for(i = 0; i < numStates*numStates; i++)
        MTemp[i] = dt*(0.5 * dk1_dx[i]);
    for(i = 0; i < numStates; i++)
        MTemp[i*(numStates+1)] += 1.0;

    /*dk2/dx = ATemp*MTemp*/
    for(i = 0; i < numLinearStates; i++)
        for(j = 0; j < numStates; j++)
        {
            REAL_TYPE t = 0.0;
            for(k=0; k < numStates; k++)
                t += ATemp[i*numStates + k]*MTemp[k*numStates + j];
            dk2_dx[i*numStates + j] = t;
        }

    /*MTemp = dt*(0.5 * dk1/du)*/
    for(i = 0; i < numStates*numControls; i++)
        MTemp[i] = dt*(0.5 * dk1_du[i]);

    /*dk2/du = ATemp*MTemp + BTemp*/
    for(i = 0; i < numLinearStates; i++)
        for(j = 0; j < numControls; j++)
        {
            REAL_TYPE t = 0.0;
            for(k=0; k < numStates; k++)
                t += ATemp[i*numStates + k]*MTemp[k*numControls + j];
            dk2_du[i*numControls + j] = t;
        }
    for(i = 0; i < numLinearStates*numControls; i++)
            dk2_du[i] += BTemp[i];

    /*MTemp = I + dt*(0.5 * dk2/dx)*/
    for(i = 0; i < numStates*numStates; i++)
        MTemp[i] = dt*(0.5 * dk2_dx[i]);
    for(i = 0; i < numStates; i++)
        MTemp[i*(numStates+1)] += 1.0;

    /*dk3/dx = ATemp*MTemp*/
    for(i = 0; i < numLinearStates; i++)
        for(j = 0; j < numStates; j++)
        {
            REAL_TYPE t = 0.0;
            for(k=0; k < numStates; k++)
                t += ATemp[i*numStates + k]*MTemp[k*numStates + j];
            dk3_dx[i*numStates + j] = t;
        }

    /*MTemp = dt*(0.5 * dk2/du)*/
    for(i = 0; i < numStates*numControls; i++)
        MTemp[i] = dt*(0.5 * dk2_du[i]);

    /*dk3/du = ATemp*MTemp + BTemp*/
    for(i = 0; i < numLinearStates; i++)
        for(j = 0; j < numControls; j++)
        {
            REAL_TYPE t = 0.0;
            for(k=0; k < numStates; k++)
                t += ATemp[i*numStates + k]*MTemp[k*numControls + j];
            dk3_du[i*numControls + j] = t;
        }
    for(i = 0; i < numLinearStates*numControls; i++)
            dk3_du[i] += BTemp[i];

    /*MTemp = I + dt*(1 * dk3/dx)*/
    for(i = 0; i < numStates*numStates; i++)
        MTemp[i] = dt*(1 * dk3_dx[i]);
    for(i = 0; i < numStates; i++)
        MTemp[i*(numStates+1)] += 1.0;

    /*dk4/dx = ATemp*MTemp*/
    for(i = 0; i < numLinearStates; i++)
        for(j = 0; j < numStates; j++)
        {
            REAL_TYPE t = 0.0;
            for(k=0; k < numStates; k++)
                t += ATemp[i*numStates + k]*MTemp[k*numStates + j];
            dk4_dx[i*numStates + j] = t;
        }

    /*MTemp = dt*(1 * dk3/du)*/
    for(i = 0; i < numStates*numControls; i++)
        MTemp[i] = dt*(1 * dk3_du[i]);

    /*dk4/du = ATemp*MTemp + BTemp*/
    for(i = 0; i < numLinearStates; i++)
        for(j = 0; j < numControls; j++)
        {
            REAL_TYPE t = 0.0;
            for(k=0; k < numStates; k++)
                t += ATemp[i*numStates + k]*MTemp[k*numControls + j];
            dk4_du[i*numControls + j] = t;
        }
    for(i = 0; i < numLinearStates*numControls; i++)
            dk4_du[i] += BTemp[i];

    /*Calculate sensitivities*/
    /*Non-linear parts*/
    for(i = 0; i < numLinearStates*numStates; i++)
       ALin[i] = dt*(0.166667 * dk1_dx[i] + 0.333333 * dk2_dx[i] + 0.333333 * dk3_dx[i] + 0.166667 * dk4_dx[i]);
    for(i = 0; i < numLinearStates; i++)
        ALin[i*(numStates+1)] += 1.0;

    for(i = 0; i < numLinearStates*numControls; i++)
       BLin[i] = dt*(0.166667 * dk1_du[i] + 0.333333 * dk2_du[i] + 0.333333 * dk3_du[i] + 0.166667 * dk4_du[i]);
}

void NMPCProblem::integrateSystemSensitivitiesOneStep(REAL_TYPE *x_new, REAL_TYPE *x, REAL_TYPE *u, REAL_TYPE *A, REAL_TYPE *B)
{
    int i,j,k;

    /*k1 = f(x,u)*/
    /*dk1/dx = df(x,u)/dx*/
    /*dk1/du = df(x,u)/du*/
    evaluateDynamicsAndDerivatives(k1, dk1_dx, dk1_du, x, u);

    /*k2 = f(x + dt*(0.5 * k1))*/
    for(j=0; j < numStates; j++)
       xTemp[j] = x[j] + dt*(0.5 * k1[j]);

    evaluateDynamicsAndDerivatives(k2, ATemp, BTemp, xTemp, u);

    /*MTemp = I + dt*(0.5 * dk1/dx)*/
    for(i = 0; i < numStates*numStates; i++)
        MTemp[i] = dt*(0.5 * dk1_dx[i]);
    for(i = 0; i < numStates; i++)
        MTemp[i*(numStates+1)] += 1.0;

    /*dk2/dx = ATemp*MTemp*/
    for(i = numLinearStates; i < numStates; i++)
        for(j = 0; j < numStates; j++)
        {
            REAL_TYPE t = 0.0;
            for(k=0; k < numStates; k++)
                t += ATemp[i*numStates + k]*MTemp[k*numStates + j];
            dk2_dx[i*numStates + j] = t;
        }

    /*MTemp = dt*(0.5 * dk1/du)*/
    for(i = 0; i < numStates*numControls; i++)
        MTemp[i] = dt*(0.5 * dk1_du[i]);

    /*dk2/du = ATemp*MTemp + BTemp*/
    for(i = numLinearStates; i < numStates; i++)
        for(j = 0; j < numControls; j++)
        {
            REAL_TYPE t = 0.0;
            for(k=0; k < numStates; k++)
                t += ATemp[i*numStates + k]*MTemp[k*numControls + j];
            dk1_du[i*numControls + j] = t;
        }
    for(i = numLinearStates*numControls; i < numStates*numControls; i++)
            dk1_du[i] += BTemp[i];

    /*k3 = f(x + dt*(0.5 * k2))*/
    for(j=0; j < numStates; j++)
       xTemp[j] = x[j] + dt*(0.5 * k2[j]);

    evaluateDynamicsAndDerivatives(k3, ATemp, BTemp, xTemp, u);

    /*MTemp = I + dt*(0.5 * dk2/dx)*/
    for(i = 0; i < numStates*numStates; i++)
        MTemp[i] = dt*(0.5 * dk2_dx[i]);
    for(i = 0; i < numStates; i++)
        MTemp[i*(numStates+1)] += 1.0;

    /*dk3/dx = ATemp*MTemp*/
    for(i = numLinearStates; i < numStates; i++)
        for(j = 0; j < numStates; j++)
        {
            REAL_TYPE t = 0.0;
            for(k=0; k < numStates; k++)
                t += ATemp[i*numStates + k]*MTemp[k*numStates + j];
            dk3_dx[i*numStates + j] = t;
        }

    /*MTemp = dt*(0.5 * dk2/du)*/
    for(i = 0; i < numStates*numControls; i++)
        MTemp[i] = dt*(0.5 * dk2_du[i]);

    /*dk3/du = ATemp*MTemp + BTemp*/
    for(i = numLinearStates; i < numStates; i++)
        for(j = 0; j < numControls; j++)
        {
            REAL_TYPE t = 0.0;
            for(k=0; k < numStates; k++)
                t += ATemp[i*numStates + k]*MTemp[k*numControls + j];
            dk2_du[i*numControls + j] = t;
        }
    for(i = numLinearStates*numControls; i < numStates*numControls; i++)
            dk2_du[i] += BTemp[i];

    /*k4 = f(x + dt*(1 * k3))*/
    for(j=0; j < numStates; j++)
       xTemp[j] = x[j] + dt*(1 * k3[j]);

    evaluateDynamicsAndDerivatives(k4, ATemp, BTemp, xTemp, u);

    /*MTemp = I + dt*(1 * dk3/dx)*/
    for(i = 0; i < numStates*numStates; i++)
        MTemp[i] = dt*(1 * dk3_dx[i]);
    for(i = 0; i < numStates; i++)
        MTemp[i*(numStates+1)] += 1.0;

    /*dk4/dx = ATemp*MTemp*/
    for(i = numLinearStates; i < numStates; i++)
        for(j = 0; j < numStates; j++)
        {
            REAL_TYPE t = 0.0;
            for(k=0; k < numStates; k++)
                t += ATemp[i*numStates + k]*MTemp[k*numStates + j];
            dk4_dx[i*numStates + j] = t;
        }

    /*MTemp = dt*(1 * dk3/du)*/
    for(i = 0; i < numStates*numControls; i++)
        MTemp[i] = dt*(1 * dk3_du[i]);

    /*dk4/du = ATemp*MTemp + BTemp*/
    for(i = numLinearStates; i < numStates; i++)
        for(j = 0; j < numControls; j++)
        {
            REAL_TYPE t = 0.0;
            for(k=0; k < numStates; k++)
                t += ATemp[i*numStates + k]*MTemp[k*numControls + j];
            dk3_du[i*numControls + j] = t;
        }
    for(i = numLinearStates*numControls; i < numStates*numControls; i++)
            dk3_du[i] += BTemp[i];

    /*Calculate new state vector*/
    /*x_new = x + dt*(0.166667 * k1 + 0.333333 * k2 + 0.333333 * k3 + 0.166667 * k4)*/
    for(i=0; i < numStates; i++)
       x_new[i] = x[i] + dt*(0.166667 * k1[i] + 0.333333 * k2[i] + 0.333333 * k3[i] + 0.166667 * k4[i]);

    /*Linear parts*/
    for(i=0; i < numLinearStates*numStates; i++)
        A[i] = ALin[i];

    for(i=0; i < numLinearStates*numControls; i++)
        B[i] = BLin[i];

    /*Calculate sensitivities*/
    /*Non-linear parts*/
    for(i=numLinearStates*numStates; i < numStates*numStates; i++)
       A[i] = dt*(0.166667 * dk1_dx[i] + 0.333333 * dk2_dx[i] + 0.333333 * dk3_dx[i] + 0.166667 * dk4_dx[i]);
    for(i = numLinearStates; i < numStates; i++)
        A[i*(numStates+1)] += 1.0;

    for(i=numLinearStates*numControls; i < numStates*numControls; i++)
       B[i] = dt*(0.166667 * dk1_du[i] + 0.333333 * dk2_du[i] + 0.333333 * dk3_du[i] + 0.166667 * dk4_du[i]);
}

void NMPCProblem::integrateSystemSensitivities()
{
    int i,j;

    for(j=0; j < numSteps; j++)
    {
        integrateSystemSensitivitiesOneStep(&x[(j+1)*numStates], &x[j*numStates], &u[j*numControls], &A_all[j*numStates*numStates], &B_all[j*numStates*numControls]);
    }
}

void NMPCProblem::integrateSystem(REAL_TYPE *x, REAL_TYPE *u)
{
    int i,j;

    for(j=0; j < numSteps; j++)
    {
        /*FIXME doesn't work for exact linear states!*/
        /*k1 = f(x,u)*/
        evaluateDynamics(k1, &x[j*numStates], &u[j*numControls]);

        /*k2 = f(x + dt*(0.5 * k1))*/
        for(i=0; i < numStates; i++)
           xTemp[i] = x[j*numStates + i] + dt*(0.5 * k1[i]);

        evaluateDynamics(k2, xTemp, &u[j*numControls]);

        /*k3 = f(x + dt*(0.5 * k2))*/
        for(i=0; i < numStates; i++)
           xTemp[i] = x[j*numStates + i] + dt*(0.5 * k2[i]);

        evaluateDynamics(k3, xTemp, &u[j*numControls]);

        /*k4 = f(x + dt*(1 * k3))*/
        for(i=0; i < numStates; i++)
           xTemp[i] = x[j*numStates + i] + dt*(1 * k3[i]);

        evaluateDynamics(k4, xTemp, &u[j*numControls]);

        /*Calculate new state vector*/
        /*x_new = x + dt*(0.166667 * k1 + 0.333333 * k2 + 0.333333 * k3 + 0.166667 * k4)*/
        for(i=0; i < numStates; i++)
           x[(j+1)*numStates + i] = x[j*numStates + i] + dt*(0.166667 * k1[i] + 0.333333 * k2[i] + 0.333333 * k3[i] + 0.166667 * k4[i]);

    }
}

REAL_TYPE NMPCProblem::calculateObjective(REAL_TYPE *x, REAL_TYPE *u)
{
    REAL_TYPE objective = 0.0;

    REAL_TYPE u_0 = 0.0, u_1 = 0.0, u_2 = 0.0;
    REAL_TYPE x_0 = 0.0, x_1 = 0.0, x_2 = 0.0, x_3 = 0.0, x_4 = 0.0, x_5 = 0.0, x_6 = 0.0, x_7 = 0.0, x_8 = 0.0, x_9 = 0.0, x_10 = 0.0, x_11 = 0.0, x_12 = 0.0, x_13 = 0.0, x_14 = 0.0, x_15 = 0.0, x_16 = 0.0, x_17 = 0.0, x_18 = 0.0, x_19 = 0.0, x_20 = 0.0;

    int i;
    for(i=0; i < this->numSteps; i++)
    {
        u_0 = u[i*3 + 0];
        u_1 = u[i*3 + 1];
        u_2 = u[i*3 + 2];
        x_0 = x[(i+1)*21 + 0];
        x_1 = x[(i+1)*21 + 1];
        x_2 = x[(i+1)*21 + 2];
        x_3 = x[(i+1)*21 + 3];
        x_4 = x[(i+1)*21 + 4];
        x_5 = x[(i+1)*21 + 5];
        x_6 = x[(i+1)*21 + 6];
        x_7 = x[(i+1)*21 + 7];
        x_8 = x[(i+1)*21 + 8];
        x_9 = x[(i+1)*21 + 9];
        x_10 = x[(i+1)*21 + 10];
        x_11 = x[(i+1)*21 + 11];
        x_12 = x[(i+1)*21 + 12];
        x_13 = x[(i+1)*21 + 13];
        x_14 = x[(i+1)*21 + 14];
        x_15 = x[(i+1)*21 + 15];
        x_16 = x[(i+1)*21 + 16];
        x_17 = x[(i+1)*21 + 17];
        x_18 = x[(i+1)*21 + 18];
        x_19 = x[(i+1)*21 + 19];
        x_20 = x[(i+1)*21 + 20];


        REAL_TYPE herr_0 = (x_9 - 7.5) - h_ref[i*15 + 0];
        REAL_TYPE herr_1 = x_10 - h_ref[i*15 + 1];
        REAL_TYPE herr_2 = x_11 - h_ref[i*15 + 2];
        REAL_TYPE herr_3 = x_12 - h_ref[i*15 + 3];
        REAL_TYPE herr_4 = x_13 - h_ref[i*15 + 4];
        REAL_TYPE herr_5 = x_14 - h_ref[i*15 + 5];
        REAL_TYPE herr_6 = x_15 - h_ref[i*15 + 6];
        REAL_TYPE herr_7 = x_16 - h_ref[i*15 + 7];
        REAL_TYPE herr_8 = x_17 - h_ref[i*15 + 8];
        REAL_TYPE herr_9 = x_18 - h_ref[i*15 + 9];
        REAL_TYPE herr_10 = x_19 - h_ref[i*15 + 10];
        REAL_TYPE herr_11 = x_20 - h_ref[i*15 + 11];
        REAL_TYPE herr_12 = u_0 - h_ref[i*15 + 12];
        REAL_TYPE herr_13 = u_1 - h_ref[i*15 + 13];
        REAL_TYPE herr_14 = u_2 - h_ref[i*15 + 14];

        objective += herr_0 * herr_0 * 2.5;
        objective += herr_1 * herr_1 * 2.5;
        objective += herr_2 * herr_2 * 2.5;
        objective += herr_3 * herr_3 * 25;
        objective += herr_4 * herr_4 * 25;
        objective += herr_5 * herr_5 * 25;
        objective += herr_6 * herr_6 * 25;
        objective += herr_7 * herr_7 * 25;
        objective += herr_8 * herr_8 * 25;
        objective += herr_9 * herr_9 * 25;
        objective += herr_10 * herr_10 * 25;
        objective += herr_11 * herr_11 * 25;
        objective += herr_12 * herr_12 * 0.01;
        objective += herr_13 * herr_13 * 0.01;
        objective += herr_14 * herr_14 * 0.01;
    }

    REAL_TYPE herr_end_0 = (x_9 - 7.5) - h_ref_end[0];
    REAL_TYPE herr_end_1 = x_10 - h_ref_end[1];
    REAL_TYPE herr_end_2 = x_11 - h_ref_end[2];

    objective += herr_end_0 * herr_end_0 * 2.5;
    objective += herr_end_1 * herr_end_1 * 2.5;
    objective += herr_end_2 * herr_end_2 * 2.5;

    return objective;
}


REAL_TYPE NMPCProblem::calculateObjectiveAndDerivatives(REAL_TYPE *dG_dx, REAL_TYPE *dG_du, REAL_TYPE *x, REAL_TYPE *u)
{
    REAL_TYPE objective = 0.0;

    REAL_TYPE u_0 = 0.0, u_1 = 0.0, u_2 = 0.0;
    REAL_TYPE x_0 = 0.0, x_1 = 0.0, x_2 = 0.0, x_3 = 0.0, x_4 = 0.0, x_5 = 0.0, x_6 = 0.0, x_7 = 0.0, x_8 = 0.0, x_9 = 0.0, x_10 = 0.0, x_11 = 0.0, x_12 = 0.0, x_13 = 0.0, x_14 = 0.0, x_15 = 0.0, x_16 = 0.0, x_17 = 0.0, x_18 = 0.0, x_19 = 0.0, x_20 = 0.0;

    int i;
    for(i=0; i < this->numSteps; i++)
    {
        u_0 = u[i*3 + 0];
        u_1 = u[i*3 + 1];
        u_2 = u[i*3 + 2];
        x_0 = x[(i+1)*21 + 0];
        x_1 = x[(i+1)*21 + 1];
        x_2 = x[(i+1)*21 + 2];
        x_3 = x[(i+1)*21 + 3];
        x_4 = x[(i+1)*21 + 4];
        x_5 = x[(i+1)*21 + 5];
        x_6 = x[(i+1)*21 + 6];
        x_7 = x[(i+1)*21 + 7];
        x_8 = x[(i+1)*21 + 8];
        x_9 = x[(i+1)*21 + 9];
        x_10 = x[(i+1)*21 + 10];
        x_11 = x[(i+1)*21 + 11];
        x_12 = x[(i+1)*21 + 12];
        x_13 = x[(i+1)*21 + 13];
        x_14 = x[(i+1)*21 + 14];
        x_15 = x[(i+1)*21 + 15];
        x_16 = x[(i+1)*21 + 16];
        x_17 = x[(i+1)*21 + 17];
        x_18 = x[(i+1)*21 + 18];
        x_19 = x[(i+1)*21 + 19];
        x_20 = x[(i+1)*21 + 20];


        REAL_TYPE herr_0 = (x_9 - 7.5) - h_ref[i*15 + 0];
        REAL_TYPE herr_1 = x_10 - h_ref[i*15 + 1];
        REAL_TYPE herr_2 = x_11 - h_ref[i*15 + 2];
        REAL_TYPE herr_3 = x_12 - h_ref[i*15 + 3];
        REAL_TYPE herr_4 = x_13 - h_ref[i*15 + 4];
        REAL_TYPE herr_5 = x_14 - h_ref[i*15 + 5];
        REAL_TYPE herr_6 = x_15 - h_ref[i*15 + 6];
        REAL_TYPE herr_7 = x_16 - h_ref[i*15 + 7];
        REAL_TYPE herr_8 = x_17 - h_ref[i*15 + 8];
        REAL_TYPE herr_9 = x_18 - h_ref[i*15 + 9];
        REAL_TYPE herr_10 = x_19 - h_ref[i*15 + 10];
        REAL_TYPE herr_11 = x_20 - h_ref[i*15 + 11];
        REAL_TYPE herr_12 = u_0 - h_ref[i*15 + 12];
        REAL_TYPE herr_13 = u_1 - h_ref[i*15 + 13];
        REAL_TYPE herr_14 = u_2 - h_ref[i*15 + 14];

        objective += herr_0 * herr_0 * 2.5;
        objective += herr_1 * herr_1 * 2.5;
        objective += herr_2 * herr_2 * 2.5;
        objective += herr_3 * herr_3 * 25;
        objective += herr_4 * herr_4 * 25;
        objective += herr_5 * herr_5 * 25;
        objective += herr_6 * herr_6 * 25;
        objective += herr_7 * herr_7 * 25;
        objective += herr_8 * herr_8 * 25;
        objective += herr_9 * herr_9 * 25;
        objective += herr_10 * herr_10 * 25;
        objective += herr_11 * herr_11 * 25;
        objective += herr_12 * herr_12 * 0.01;
        objective += herr_13 * herr_13 * 0.01;
        objective += herr_14 * herr_14 * 0.01;


        REAL_TYPE dherr_0_dx_0 = 0;
        REAL_TYPE dherr_1_dx_0 = 0;
        REAL_TYPE dherr_2_dx_0 = 0;
        REAL_TYPE dherr_3_dx_0 = 0;
        REAL_TYPE dherr_4_dx_0 = 0;
        REAL_TYPE dherr_5_dx_0 = 0;
        REAL_TYPE dherr_6_dx_0 = 0;
        REAL_TYPE dherr_7_dx_0 = 0;
        REAL_TYPE dherr_8_dx_0 = 0;
        REAL_TYPE dherr_9_dx_0 = 0;
        REAL_TYPE dherr_10_dx_0 = 0;
        REAL_TYPE dherr_11_dx_0 = 0;
        REAL_TYPE dherr_12_dx_0 = 0;
        REAL_TYPE dherr_13_dx_0 = 0;
        REAL_TYPE dherr_14_dx_0 = 0;

        dG_dx[i*21 + 0] =
        herr_0 * dherr_0_dx_0 * -5
        +herr_1 * dherr_1_dx_0 * -5
        +herr_2 * dherr_2_dx_0 * -5
        +herr_3 * dherr_3_dx_0 * -50
        +herr_4 * dherr_4_dx_0 * -50
        +herr_5 * dherr_5_dx_0 * -50
        +herr_6 * dherr_6_dx_0 * -50
        +herr_7 * dherr_7_dx_0 * -50
        +herr_8 * dherr_8_dx_0 * -50
        +herr_9 * dherr_9_dx_0 * -50
        +herr_10 * dherr_10_dx_0 * -50
        +herr_11 * dherr_11_dx_0 * -50
        +herr_12 * dherr_12_dx_0 * -0.02
        +herr_13 * dherr_13_dx_0 * -0.02
        +herr_14 * dherr_14_dx_0 * -0.02;

        REAL_TYPE dherr_0_dx_1 = 0;
        REAL_TYPE dherr_1_dx_1 = 0;
        REAL_TYPE dherr_2_dx_1 = 0;
        REAL_TYPE dherr_3_dx_1 = 0;
        REAL_TYPE dherr_4_dx_1 = 0;
        REAL_TYPE dherr_5_dx_1 = 0;
        REAL_TYPE dherr_6_dx_1 = 0;
        REAL_TYPE dherr_7_dx_1 = 0;
        REAL_TYPE dherr_8_dx_1 = 0;
        REAL_TYPE dherr_9_dx_1 = 0;
        REAL_TYPE dherr_10_dx_1 = 0;
        REAL_TYPE dherr_11_dx_1 = 0;
        REAL_TYPE dherr_12_dx_1 = 0;
        REAL_TYPE dherr_13_dx_1 = 0;
        REAL_TYPE dherr_14_dx_1 = 0;

        dG_dx[i*21 + 1] =
        herr_0 * dherr_0_dx_1 * -5
        +herr_1 * dherr_1_dx_1 * -5
        +herr_2 * dherr_2_dx_1 * -5
        +herr_3 * dherr_3_dx_1 * -50
        +herr_4 * dherr_4_dx_1 * -50
        +herr_5 * dherr_5_dx_1 * -50
        +herr_6 * dherr_6_dx_1 * -50
        +herr_7 * dherr_7_dx_1 * -50
        +herr_8 * dherr_8_dx_1 * -50
        +herr_9 * dherr_9_dx_1 * -50
        +herr_10 * dherr_10_dx_1 * -50
        +herr_11 * dherr_11_dx_1 * -50
        +herr_12 * dherr_12_dx_1 * -0.02
        +herr_13 * dherr_13_dx_1 * -0.02
        +herr_14 * dherr_14_dx_1 * -0.02;

        REAL_TYPE dherr_0_dx_2 = 0;
        REAL_TYPE dherr_1_dx_2 = 0;
        REAL_TYPE dherr_2_dx_2 = 0;
        REAL_TYPE dherr_3_dx_2 = 0;
        REAL_TYPE dherr_4_dx_2 = 0;
        REAL_TYPE dherr_5_dx_2 = 0;
        REAL_TYPE dherr_6_dx_2 = 0;
        REAL_TYPE dherr_7_dx_2 = 0;
        REAL_TYPE dherr_8_dx_2 = 0;
        REAL_TYPE dherr_9_dx_2 = 0;
        REAL_TYPE dherr_10_dx_2 = 0;
        REAL_TYPE dherr_11_dx_2 = 0;
        REAL_TYPE dherr_12_dx_2 = 0;
        REAL_TYPE dherr_13_dx_2 = 0;
        REAL_TYPE dherr_14_dx_2 = 0;

        dG_dx[i*21 + 2] =
        herr_0 * dherr_0_dx_2 * -5
        +herr_1 * dherr_1_dx_2 * -5
        +herr_2 * dherr_2_dx_2 * -5
        +herr_3 * dherr_3_dx_2 * -50
        +herr_4 * dherr_4_dx_2 * -50
        +herr_5 * dherr_5_dx_2 * -50
        +herr_6 * dherr_6_dx_2 * -50
        +herr_7 * dherr_7_dx_2 * -50
        +herr_8 * dherr_8_dx_2 * -50
        +herr_9 * dherr_9_dx_2 * -50
        +herr_10 * dherr_10_dx_2 * -50
        +herr_11 * dherr_11_dx_2 * -50
        +herr_12 * dherr_12_dx_2 * -0.02
        +herr_13 * dherr_13_dx_2 * -0.02
        +herr_14 * dherr_14_dx_2 * -0.02;

        REAL_TYPE dherr_0_dx_3 = 0;
        REAL_TYPE dherr_1_dx_3 = 0;
        REAL_TYPE dherr_2_dx_3 = 0;
        REAL_TYPE dherr_3_dx_3 = 0;
        REAL_TYPE dherr_4_dx_3 = 0;
        REAL_TYPE dherr_5_dx_3 = 0;
        REAL_TYPE dherr_6_dx_3 = 0;
        REAL_TYPE dherr_7_dx_3 = 0;
        REAL_TYPE dherr_8_dx_3 = 0;
        REAL_TYPE dherr_9_dx_3 = 0;
        REAL_TYPE dherr_10_dx_3 = 0;
        REAL_TYPE dherr_11_dx_3 = 0;
        REAL_TYPE dherr_12_dx_3 = 0;
        REAL_TYPE dherr_13_dx_3 = 0;
        REAL_TYPE dherr_14_dx_3 = 0;

        dG_dx[i*21 + 3] =
        herr_0 * dherr_0_dx_3 * -5
        +herr_1 * dherr_1_dx_3 * -5
        +herr_2 * dherr_2_dx_3 * -5
        +herr_3 * dherr_3_dx_3 * -50
        +herr_4 * dherr_4_dx_3 * -50
        +herr_5 * dherr_5_dx_3 * -50
        +herr_6 * dherr_6_dx_3 * -50
        +herr_7 * dherr_7_dx_3 * -50
        +herr_8 * dherr_8_dx_3 * -50
        +herr_9 * dherr_9_dx_3 * -50
        +herr_10 * dherr_10_dx_3 * -50
        +herr_11 * dherr_11_dx_3 * -50
        +herr_12 * dherr_12_dx_3 * -0.02
        +herr_13 * dherr_13_dx_3 * -0.02
        +herr_14 * dherr_14_dx_3 * -0.02;

        REAL_TYPE dherr_0_dx_4 = 0;
        REAL_TYPE dherr_1_dx_4 = 0;
        REAL_TYPE dherr_2_dx_4 = 0;
        REAL_TYPE dherr_3_dx_4 = 0;
        REAL_TYPE dherr_4_dx_4 = 0;
        REAL_TYPE dherr_5_dx_4 = 0;
        REAL_TYPE dherr_6_dx_4 = 0;
        REAL_TYPE dherr_7_dx_4 = 0;
        REAL_TYPE dherr_8_dx_4 = 0;
        REAL_TYPE dherr_9_dx_4 = 0;
        REAL_TYPE dherr_10_dx_4 = 0;
        REAL_TYPE dherr_11_dx_4 = 0;
        REAL_TYPE dherr_12_dx_4 = 0;
        REAL_TYPE dherr_13_dx_4 = 0;
        REAL_TYPE dherr_14_dx_4 = 0;

        dG_dx[i*21 + 4] =
        herr_0 * dherr_0_dx_4 * -5
        +herr_1 * dherr_1_dx_4 * -5
        +herr_2 * dherr_2_dx_4 * -5
        +herr_3 * dherr_3_dx_4 * -50
        +herr_4 * dherr_4_dx_4 * -50
        +herr_5 * dherr_5_dx_4 * -50
        +herr_6 * dherr_6_dx_4 * -50
        +herr_7 * dherr_7_dx_4 * -50
        +herr_8 * dherr_8_dx_4 * -50
        +herr_9 * dherr_9_dx_4 * -50
        +herr_10 * dherr_10_dx_4 * -50
        +herr_11 * dherr_11_dx_4 * -50
        +herr_12 * dherr_12_dx_4 * -0.02
        +herr_13 * dherr_13_dx_4 * -0.02
        +herr_14 * dherr_14_dx_4 * -0.02;

        REAL_TYPE dherr_0_dx_5 = 0;
        REAL_TYPE dherr_1_dx_5 = 0;
        REAL_TYPE dherr_2_dx_5 = 0;
        REAL_TYPE dherr_3_dx_5 = 0;
        REAL_TYPE dherr_4_dx_5 = 0;
        REAL_TYPE dherr_5_dx_5 = 0;
        REAL_TYPE dherr_6_dx_5 = 0;
        REAL_TYPE dherr_7_dx_5 = 0;
        REAL_TYPE dherr_8_dx_5 = 0;
        REAL_TYPE dherr_9_dx_5 = 0;
        REAL_TYPE dherr_10_dx_5 = 0;
        REAL_TYPE dherr_11_dx_5 = 0;
        REAL_TYPE dherr_12_dx_5 = 0;
        REAL_TYPE dherr_13_dx_5 = 0;
        REAL_TYPE dherr_14_dx_5 = 0;

        dG_dx[i*21 + 5] =
        herr_0 * dherr_0_dx_5 * -5
        +herr_1 * dherr_1_dx_5 * -5
        +herr_2 * dherr_2_dx_5 * -5
        +herr_3 * dherr_3_dx_5 * -50
        +herr_4 * dherr_4_dx_5 * -50
        +herr_5 * dherr_5_dx_5 * -50
        +herr_6 * dherr_6_dx_5 * -50
        +herr_7 * dherr_7_dx_5 * -50
        +herr_8 * dherr_8_dx_5 * -50
        +herr_9 * dherr_9_dx_5 * -50
        +herr_10 * dherr_10_dx_5 * -50
        +herr_11 * dherr_11_dx_5 * -50
        +herr_12 * dherr_12_dx_5 * -0.02
        +herr_13 * dherr_13_dx_5 * -0.02
        +herr_14 * dherr_14_dx_5 * -0.02;

        REAL_TYPE dherr_0_dx_6 = 0;
        REAL_TYPE dherr_1_dx_6 = 0;
        REAL_TYPE dherr_2_dx_6 = 0;
        REAL_TYPE dherr_3_dx_6 = 0;
        REAL_TYPE dherr_4_dx_6 = 0;
        REAL_TYPE dherr_5_dx_6 = 0;
        REAL_TYPE dherr_6_dx_6 = 0;
        REAL_TYPE dherr_7_dx_6 = 0;
        REAL_TYPE dherr_8_dx_6 = 0;
        REAL_TYPE dherr_9_dx_6 = 0;
        REAL_TYPE dherr_10_dx_6 = 0;
        REAL_TYPE dherr_11_dx_6 = 0;
        REAL_TYPE dherr_12_dx_6 = 0;
        REAL_TYPE dherr_13_dx_6 = 0;
        REAL_TYPE dherr_14_dx_6 = 0;

        dG_dx[i*21 + 6] =
        herr_0 * dherr_0_dx_6 * -5
        +herr_1 * dherr_1_dx_6 * -5
        +herr_2 * dherr_2_dx_6 * -5
        +herr_3 * dherr_3_dx_6 * -50
        +herr_4 * dherr_4_dx_6 * -50
        +herr_5 * dherr_5_dx_6 * -50
        +herr_6 * dherr_6_dx_6 * -50
        +herr_7 * dherr_7_dx_6 * -50
        +herr_8 * dherr_8_dx_6 * -50
        +herr_9 * dherr_9_dx_6 * -50
        +herr_10 * dherr_10_dx_6 * -50
        +herr_11 * dherr_11_dx_6 * -50
        +herr_12 * dherr_12_dx_6 * -0.02
        +herr_13 * dherr_13_dx_6 * -0.02
        +herr_14 * dherr_14_dx_6 * -0.02;

        REAL_TYPE dherr_0_dx_7 = 0;
        REAL_TYPE dherr_1_dx_7 = 0;
        REAL_TYPE dherr_2_dx_7 = 0;
        REAL_TYPE dherr_3_dx_7 = 0;
        REAL_TYPE dherr_4_dx_7 = 0;
        REAL_TYPE dherr_5_dx_7 = 0;
        REAL_TYPE dherr_6_dx_7 = 0;
        REAL_TYPE dherr_7_dx_7 = 0;
        REAL_TYPE dherr_8_dx_7 = 0;
        REAL_TYPE dherr_9_dx_7 = 0;
        REAL_TYPE dherr_10_dx_7 = 0;
        REAL_TYPE dherr_11_dx_7 = 0;
        REAL_TYPE dherr_12_dx_7 = 0;
        REAL_TYPE dherr_13_dx_7 = 0;
        REAL_TYPE dherr_14_dx_7 = 0;

        dG_dx[i*21 + 7] =
        herr_0 * dherr_0_dx_7 * -5
        +herr_1 * dherr_1_dx_7 * -5
        +herr_2 * dherr_2_dx_7 * -5
        +herr_3 * dherr_3_dx_7 * -50
        +herr_4 * dherr_4_dx_7 * -50
        +herr_5 * dherr_5_dx_7 * -50
        +herr_6 * dherr_6_dx_7 * -50
        +herr_7 * dherr_7_dx_7 * -50
        +herr_8 * dherr_8_dx_7 * -50
        +herr_9 * dherr_9_dx_7 * -50
        +herr_10 * dherr_10_dx_7 * -50
        +herr_11 * dherr_11_dx_7 * -50
        +herr_12 * dherr_12_dx_7 * -0.02
        +herr_13 * dherr_13_dx_7 * -0.02
        +herr_14 * dherr_14_dx_7 * -0.02;

        REAL_TYPE dherr_0_dx_8 = 0;
        REAL_TYPE dherr_1_dx_8 = 0;
        REAL_TYPE dherr_2_dx_8 = 0;
        REAL_TYPE dherr_3_dx_8 = 0;
        REAL_TYPE dherr_4_dx_8 = 0;
        REAL_TYPE dherr_5_dx_8 = 0;
        REAL_TYPE dherr_6_dx_8 = 0;
        REAL_TYPE dherr_7_dx_8 = 0;
        REAL_TYPE dherr_8_dx_8 = 0;
        REAL_TYPE dherr_9_dx_8 = 0;
        REAL_TYPE dherr_10_dx_8 = 0;
        REAL_TYPE dherr_11_dx_8 = 0;
        REAL_TYPE dherr_12_dx_8 = 0;
        REAL_TYPE dherr_13_dx_8 = 0;
        REAL_TYPE dherr_14_dx_8 = 0;

        dG_dx[i*21 + 8] =
        herr_0 * dherr_0_dx_8 * -5
        +herr_1 * dherr_1_dx_8 * -5
        +herr_2 * dherr_2_dx_8 * -5
        +herr_3 * dherr_3_dx_8 * -50
        +herr_4 * dherr_4_dx_8 * -50
        +herr_5 * dherr_5_dx_8 * -50
        +herr_6 * dherr_6_dx_8 * -50
        +herr_7 * dherr_7_dx_8 * -50
        +herr_8 * dherr_8_dx_8 * -50
        +herr_9 * dherr_9_dx_8 * -50
        +herr_10 * dherr_10_dx_8 * -50
        +herr_11 * dherr_11_dx_8 * -50
        +herr_12 * dherr_12_dx_8 * -0.02
        +herr_13 * dherr_13_dx_8 * -0.02
        +herr_14 * dherr_14_dx_8 * -0.02;

        REAL_TYPE dherr_0_dx_9 = 1;
        REAL_TYPE dherr_1_dx_9 = 0;
        REAL_TYPE dherr_2_dx_9 = 0;
        REAL_TYPE dherr_3_dx_9 = 0;
        REAL_TYPE dherr_4_dx_9 = 0;
        REAL_TYPE dherr_5_dx_9 = 0;
        REAL_TYPE dherr_6_dx_9 = 0;
        REAL_TYPE dherr_7_dx_9 = 0;
        REAL_TYPE dherr_8_dx_9 = 0;
        REAL_TYPE dherr_9_dx_9 = 0;
        REAL_TYPE dherr_10_dx_9 = 0;
        REAL_TYPE dherr_11_dx_9 = 0;
        REAL_TYPE dherr_12_dx_9 = 0;
        REAL_TYPE dherr_13_dx_9 = 0;
        REAL_TYPE dherr_14_dx_9 = 0;

        dG_dx[i*21 + 9] =
        herr_0 * dherr_0_dx_9 * -5
        +herr_1 * dherr_1_dx_9 * -5
        +herr_2 * dherr_2_dx_9 * -5
        +herr_3 * dherr_3_dx_9 * -50
        +herr_4 * dherr_4_dx_9 * -50
        +herr_5 * dherr_5_dx_9 * -50
        +herr_6 * dherr_6_dx_9 * -50
        +herr_7 * dherr_7_dx_9 * -50
        +herr_8 * dherr_8_dx_9 * -50
        +herr_9 * dherr_9_dx_9 * -50
        +herr_10 * dherr_10_dx_9 * -50
        +herr_11 * dherr_11_dx_9 * -50
        +herr_12 * dherr_12_dx_9 * -0.02
        +herr_13 * dherr_13_dx_9 * -0.02
        +herr_14 * dherr_14_dx_9 * -0.02;

        REAL_TYPE dherr_0_dx_10 = 0;
        REAL_TYPE dherr_1_dx_10 = 1;
        REAL_TYPE dherr_2_dx_10 = 0;
        REAL_TYPE dherr_3_dx_10 = 0;
        REAL_TYPE dherr_4_dx_10 = 0;
        REAL_TYPE dherr_5_dx_10 = 0;
        REAL_TYPE dherr_6_dx_10 = 0;
        REAL_TYPE dherr_7_dx_10 = 0;
        REAL_TYPE dherr_8_dx_10 = 0;
        REAL_TYPE dherr_9_dx_10 = 0;
        REAL_TYPE dherr_10_dx_10 = 0;
        REAL_TYPE dherr_11_dx_10 = 0;
        REAL_TYPE dherr_12_dx_10 = 0;
        REAL_TYPE dherr_13_dx_10 = 0;
        REAL_TYPE dherr_14_dx_10 = 0;

        dG_dx[i*21 + 10] =
        herr_0 * dherr_0_dx_10 * -5
        +herr_1 * dherr_1_dx_10 * -5
        +herr_2 * dherr_2_dx_10 * -5
        +herr_3 * dherr_3_dx_10 * -50
        +herr_4 * dherr_4_dx_10 * -50
        +herr_5 * dherr_5_dx_10 * -50
        +herr_6 * dherr_6_dx_10 * -50
        +herr_7 * dherr_7_dx_10 * -50
        +herr_8 * dherr_8_dx_10 * -50
        +herr_9 * dherr_9_dx_10 * -50
        +herr_10 * dherr_10_dx_10 * -50
        +herr_11 * dherr_11_dx_10 * -50
        +herr_12 * dherr_12_dx_10 * -0.02
        +herr_13 * dherr_13_dx_10 * -0.02
        +herr_14 * dherr_14_dx_10 * -0.02;

        REAL_TYPE dherr_0_dx_11 = 0;
        REAL_TYPE dherr_1_dx_11 = 0;
        REAL_TYPE dherr_2_dx_11 = 1;
        REAL_TYPE dherr_3_dx_11 = 0;
        REAL_TYPE dherr_4_dx_11 = 0;
        REAL_TYPE dherr_5_dx_11 = 0;
        REAL_TYPE dherr_6_dx_11 = 0;
        REAL_TYPE dherr_7_dx_11 = 0;
        REAL_TYPE dherr_8_dx_11 = 0;
        REAL_TYPE dherr_9_dx_11 = 0;
        REAL_TYPE dherr_10_dx_11 = 0;
        REAL_TYPE dherr_11_dx_11 = 0;
        REAL_TYPE dherr_12_dx_11 = 0;
        REAL_TYPE dherr_13_dx_11 = 0;
        REAL_TYPE dherr_14_dx_11 = 0;

        dG_dx[i*21 + 11] =
        herr_0 * dherr_0_dx_11 * -5
        +herr_1 * dherr_1_dx_11 * -5
        +herr_2 * dherr_2_dx_11 * -5
        +herr_3 * dherr_3_dx_11 * -50
        +herr_4 * dherr_4_dx_11 * -50
        +herr_5 * dherr_5_dx_11 * -50
        +herr_6 * dherr_6_dx_11 * -50
        +herr_7 * dherr_7_dx_11 * -50
        +herr_8 * dherr_8_dx_11 * -50
        +herr_9 * dherr_9_dx_11 * -50
        +herr_10 * dherr_10_dx_11 * -50
        +herr_11 * dherr_11_dx_11 * -50
        +herr_12 * dherr_12_dx_11 * -0.02
        +herr_13 * dherr_13_dx_11 * -0.02
        +herr_14 * dherr_14_dx_11 * -0.02;

        REAL_TYPE dherr_0_dx_12 = 0;
        REAL_TYPE dherr_1_dx_12 = 0;
        REAL_TYPE dherr_2_dx_12 = 0;
        REAL_TYPE dherr_3_dx_12 = 1;
        REAL_TYPE dherr_4_dx_12 = 0;
        REAL_TYPE dherr_5_dx_12 = 0;
        REAL_TYPE dherr_6_dx_12 = 0;
        REAL_TYPE dherr_7_dx_12 = 0;
        REAL_TYPE dherr_8_dx_12 = 0;
        REAL_TYPE dherr_9_dx_12 = 0;
        REAL_TYPE dherr_10_dx_12 = 0;
        REAL_TYPE dherr_11_dx_12 = 0;
        REAL_TYPE dherr_12_dx_12 = 0;
        REAL_TYPE dherr_13_dx_12 = 0;
        REAL_TYPE dherr_14_dx_12 = 0;

        dG_dx[i*21 + 12] =
        herr_0 * dherr_0_dx_12 * -5
        +herr_1 * dherr_1_dx_12 * -5
        +herr_2 * dherr_2_dx_12 * -5
        +herr_3 * dherr_3_dx_12 * -50
        +herr_4 * dherr_4_dx_12 * -50
        +herr_5 * dherr_5_dx_12 * -50
        +herr_6 * dherr_6_dx_12 * -50
        +herr_7 * dherr_7_dx_12 * -50
        +herr_8 * dherr_8_dx_12 * -50
        +herr_9 * dherr_9_dx_12 * -50
        +herr_10 * dherr_10_dx_12 * -50
        +herr_11 * dherr_11_dx_12 * -50
        +herr_12 * dherr_12_dx_12 * -0.02
        +herr_13 * dherr_13_dx_12 * -0.02
        +herr_14 * dherr_14_dx_12 * -0.02;

        REAL_TYPE dherr_0_dx_13 = 0;
        REAL_TYPE dherr_1_dx_13 = 0;
        REAL_TYPE dherr_2_dx_13 = 0;
        REAL_TYPE dherr_3_dx_13 = 0;
        REAL_TYPE dherr_4_dx_13 = 1;
        REAL_TYPE dherr_5_dx_13 = 0;
        REAL_TYPE dherr_6_dx_13 = 0;
        REAL_TYPE dherr_7_dx_13 = 0;
        REAL_TYPE dherr_8_dx_13 = 0;
        REAL_TYPE dherr_9_dx_13 = 0;
        REAL_TYPE dherr_10_dx_13 = 0;
        REAL_TYPE dherr_11_dx_13 = 0;
        REAL_TYPE dherr_12_dx_13 = 0;
        REAL_TYPE dherr_13_dx_13 = 0;
        REAL_TYPE dherr_14_dx_13 = 0;

        dG_dx[i*21 + 13] =
        herr_0 * dherr_0_dx_13 * -5
        +herr_1 * dherr_1_dx_13 * -5
        +herr_2 * dherr_2_dx_13 * -5
        +herr_3 * dherr_3_dx_13 * -50
        +herr_4 * dherr_4_dx_13 * -50
        +herr_5 * dherr_5_dx_13 * -50
        +herr_6 * dherr_6_dx_13 * -50
        +herr_7 * dherr_7_dx_13 * -50
        +herr_8 * dherr_8_dx_13 * -50
        +herr_9 * dherr_9_dx_13 * -50
        +herr_10 * dherr_10_dx_13 * -50
        +herr_11 * dherr_11_dx_13 * -50
        +herr_12 * dherr_12_dx_13 * -0.02
        +herr_13 * dherr_13_dx_13 * -0.02
        +herr_14 * dherr_14_dx_13 * -0.02;

        REAL_TYPE dherr_0_dx_14 = 0;
        REAL_TYPE dherr_1_dx_14 = 0;
        REAL_TYPE dherr_2_dx_14 = 0;
        REAL_TYPE dherr_3_dx_14 = 0;
        REAL_TYPE dherr_4_dx_14 = 0;
        REAL_TYPE dherr_5_dx_14 = 1;
        REAL_TYPE dherr_6_dx_14 = 0;
        REAL_TYPE dherr_7_dx_14 = 0;
        REAL_TYPE dherr_8_dx_14 = 0;
        REAL_TYPE dherr_9_dx_14 = 0;
        REAL_TYPE dherr_10_dx_14 = 0;
        REAL_TYPE dherr_11_dx_14 = 0;
        REAL_TYPE dherr_12_dx_14 = 0;
        REAL_TYPE dherr_13_dx_14 = 0;
        REAL_TYPE dherr_14_dx_14 = 0;

        dG_dx[i*21 + 14] =
        herr_0 * dherr_0_dx_14 * -5
        +herr_1 * dherr_1_dx_14 * -5
        +herr_2 * dherr_2_dx_14 * -5
        +herr_3 * dherr_3_dx_14 * -50
        +herr_4 * dherr_4_dx_14 * -50
        +herr_5 * dherr_5_dx_14 * -50
        +herr_6 * dherr_6_dx_14 * -50
        +herr_7 * dherr_7_dx_14 * -50
        +herr_8 * dherr_8_dx_14 * -50
        +herr_9 * dherr_9_dx_14 * -50
        +herr_10 * dherr_10_dx_14 * -50
        +herr_11 * dherr_11_dx_14 * -50
        +herr_12 * dherr_12_dx_14 * -0.02
        +herr_13 * dherr_13_dx_14 * -0.02
        +herr_14 * dherr_14_dx_14 * -0.02;

        REAL_TYPE dherr_0_dx_15 = 0;
        REAL_TYPE dherr_1_dx_15 = 0;
        REAL_TYPE dherr_2_dx_15 = 0;
        REAL_TYPE dherr_3_dx_15 = 0;
        REAL_TYPE dherr_4_dx_15 = 0;
        REAL_TYPE dherr_5_dx_15 = 0;
        REAL_TYPE dherr_6_dx_15 = 1;
        REAL_TYPE dherr_7_dx_15 = 0;
        REAL_TYPE dherr_8_dx_15 = 0;
        REAL_TYPE dherr_9_dx_15 = 0;
        REAL_TYPE dherr_10_dx_15 = 0;
        REAL_TYPE dherr_11_dx_15 = 0;
        REAL_TYPE dherr_12_dx_15 = 0;
        REAL_TYPE dherr_13_dx_15 = 0;
        REAL_TYPE dherr_14_dx_15 = 0;

        dG_dx[i*21 + 15] =
        herr_0 * dherr_0_dx_15 * -5
        +herr_1 * dherr_1_dx_15 * -5
        +herr_2 * dherr_2_dx_15 * -5
        +herr_3 * dherr_3_dx_15 * -50
        +herr_4 * dherr_4_dx_15 * -50
        +herr_5 * dherr_5_dx_15 * -50
        +herr_6 * dherr_6_dx_15 * -50
        +herr_7 * dherr_7_dx_15 * -50
        +herr_8 * dherr_8_dx_15 * -50
        +herr_9 * dherr_9_dx_15 * -50
        +herr_10 * dherr_10_dx_15 * -50
        +herr_11 * dherr_11_dx_15 * -50
        +herr_12 * dherr_12_dx_15 * -0.02
        +herr_13 * dherr_13_dx_15 * -0.02
        +herr_14 * dherr_14_dx_15 * -0.02;

        REAL_TYPE dherr_0_dx_16 = 0;
        REAL_TYPE dherr_1_dx_16 = 0;
        REAL_TYPE dherr_2_dx_16 = 0;
        REAL_TYPE dherr_3_dx_16 = 0;
        REAL_TYPE dherr_4_dx_16 = 0;
        REAL_TYPE dherr_5_dx_16 = 0;
        REAL_TYPE dherr_6_dx_16 = 0;
        REAL_TYPE dherr_7_dx_16 = 1;
        REAL_TYPE dherr_8_dx_16 = 0;
        REAL_TYPE dherr_9_dx_16 = 0;
        REAL_TYPE dherr_10_dx_16 = 0;
        REAL_TYPE dherr_11_dx_16 = 0;
        REAL_TYPE dherr_12_dx_16 = 0;
        REAL_TYPE dherr_13_dx_16 = 0;
        REAL_TYPE dherr_14_dx_16 = 0;

        dG_dx[i*21 + 16] =
        herr_0 * dherr_0_dx_16 * -5
        +herr_1 * dherr_1_dx_16 * -5
        +herr_2 * dherr_2_dx_16 * -5
        +herr_3 * dherr_3_dx_16 * -50
        +herr_4 * dherr_4_dx_16 * -50
        +herr_5 * dherr_5_dx_16 * -50
        +herr_6 * dherr_6_dx_16 * -50
        +herr_7 * dherr_7_dx_16 * -50
        +herr_8 * dherr_8_dx_16 * -50
        +herr_9 * dherr_9_dx_16 * -50
        +herr_10 * dherr_10_dx_16 * -50
        +herr_11 * dherr_11_dx_16 * -50
        +herr_12 * dherr_12_dx_16 * -0.02
        +herr_13 * dherr_13_dx_16 * -0.02
        +herr_14 * dherr_14_dx_16 * -0.02;

        REAL_TYPE dherr_0_dx_17 = 0;
        REAL_TYPE dherr_1_dx_17 = 0;
        REAL_TYPE dherr_2_dx_17 = 0;
        REAL_TYPE dherr_3_dx_17 = 0;
        REAL_TYPE dherr_4_dx_17 = 0;
        REAL_TYPE dherr_5_dx_17 = 0;
        REAL_TYPE dherr_6_dx_17 = 0;
        REAL_TYPE dherr_7_dx_17 = 0;
        REAL_TYPE dherr_8_dx_17 = 1;
        REAL_TYPE dherr_9_dx_17 = 0;
        REAL_TYPE dherr_10_dx_17 = 0;
        REAL_TYPE dherr_11_dx_17 = 0;
        REAL_TYPE dherr_12_dx_17 = 0;
        REAL_TYPE dherr_13_dx_17 = 0;
        REAL_TYPE dherr_14_dx_17 = 0;

        dG_dx[i*21 + 17] =
        herr_0 * dherr_0_dx_17 * -5
        +herr_1 * dherr_1_dx_17 * -5
        +herr_2 * dherr_2_dx_17 * -5
        +herr_3 * dherr_3_dx_17 * -50
        +herr_4 * dherr_4_dx_17 * -50
        +herr_5 * dherr_5_dx_17 * -50
        +herr_6 * dherr_6_dx_17 * -50
        +herr_7 * dherr_7_dx_17 * -50
        +herr_8 * dherr_8_dx_17 * -50
        +herr_9 * dherr_9_dx_17 * -50
        +herr_10 * dherr_10_dx_17 * -50
        +herr_11 * dherr_11_dx_17 * -50
        +herr_12 * dherr_12_dx_17 * -0.02
        +herr_13 * dherr_13_dx_17 * -0.02
        +herr_14 * dherr_14_dx_17 * -0.02;

        REAL_TYPE dherr_0_dx_18 = 0;
        REAL_TYPE dherr_1_dx_18 = 0;
        REAL_TYPE dherr_2_dx_18 = 0;
        REAL_TYPE dherr_3_dx_18 = 0;
        REAL_TYPE dherr_4_dx_18 = 0;
        REAL_TYPE dherr_5_dx_18 = 0;
        REAL_TYPE dherr_6_dx_18 = 0;
        REAL_TYPE dherr_7_dx_18 = 0;
        REAL_TYPE dherr_8_dx_18 = 0;
        REAL_TYPE dherr_9_dx_18 = 1;
        REAL_TYPE dherr_10_dx_18 = 0;
        REAL_TYPE dherr_11_dx_18 = 0;
        REAL_TYPE dherr_12_dx_18 = 0;
        REAL_TYPE dherr_13_dx_18 = 0;
        REAL_TYPE dherr_14_dx_18 = 0;

        dG_dx[i*21 + 18] =
        herr_0 * dherr_0_dx_18 * -5
        +herr_1 * dherr_1_dx_18 * -5
        +herr_2 * dherr_2_dx_18 * -5
        +herr_3 * dherr_3_dx_18 * -50
        +herr_4 * dherr_4_dx_18 * -50
        +herr_5 * dherr_5_dx_18 * -50
        +herr_6 * dherr_6_dx_18 * -50
        +herr_7 * dherr_7_dx_18 * -50
        +herr_8 * dherr_8_dx_18 * -50
        +herr_9 * dherr_9_dx_18 * -50
        +herr_10 * dherr_10_dx_18 * -50
        +herr_11 * dherr_11_dx_18 * -50
        +herr_12 * dherr_12_dx_18 * -0.02
        +herr_13 * dherr_13_dx_18 * -0.02
        +herr_14 * dherr_14_dx_18 * -0.02;

        REAL_TYPE dherr_0_dx_19 = 0;
        REAL_TYPE dherr_1_dx_19 = 0;
        REAL_TYPE dherr_2_dx_19 = 0;
        REAL_TYPE dherr_3_dx_19 = 0;
        REAL_TYPE dherr_4_dx_19 = 0;
        REAL_TYPE dherr_5_dx_19 = 0;
        REAL_TYPE dherr_6_dx_19 = 0;
        REAL_TYPE dherr_7_dx_19 = 0;
        REAL_TYPE dherr_8_dx_19 = 0;
        REAL_TYPE dherr_9_dx_19 = 0;
        REAL_TYPE dherr_10_dx_19 = 1;
        REAL_TYPE dherr_11_dx_19 = 0;
        REAL_TYPE dherr_12_dx_19 = 0;
        REAL_TYPE dherr_13_dx_19 = 0;
        REAL_TYPE dherr_14_dx_19 = 0;

        dG_dx[i*21 + 19] =
        herr_0 * dherr_0_dx_19 * -5
        +herr_1 * dherr_1_dx_19 * -5
        +herr_2 * dherr_2_dx_19 * -5
        +herr_3 * dherr_3_dx_19 * -50
        +herr_4 * dherr_4_dx_19 * -50
        +herr_5 * dherr_5_dx_19 * -50
        +herr_6 * dherr_6_dx_19 * -50
        +herr_7 * dherr_7_dx_19 * -50
        +herr_8 * dherr_8_dx_19 * -50
        +herr_9 * dherr_9_dx_19 * -50
        +herr_10 * dherr_10_dx_19 * -50
        +herr_11 * dherr_11_dx_19 * -50
        +herr_12 * dherr_12_dx_19 * -0.02
        +herr_13 * dherr_13_dx_19 * -0.02
        +herr_14 * dherr_14_dx_19 * -0.02;

        REAL_TYPE dherr_0_dx_20 = 0;
        REAL_TYPE dherr_1_dx_20 = 0;
        REAL_TYPE dherr_2_dx_20 = 0;
        REAL_TYPE dherr_3_dx_20 = 0;
        REAL_TYPE dherr_4_dx_20 = 0;
        REAL_TYPE dherr_5_dx_20 = 0;
        REAL_TYPE dherr_6_dx_20 = 0;
        REAL_TYPE dherr_7_dx_20 = 0;
        REAL_TYPE dherr_8_dx_20 = 0;
        REAL_TYPE dherr_9_dx_20 = 0;
        REAL_TYPE dherr_10_dx_20 = 0;
        REAL_TYPE dherr_11_dx_20 = 1;
        REAL_TYPE dherr_12_dx_20 = 0;
        REAL_TYPE dherr_13_dx_20 = 0;
        REAL_TYPE dherr_14_dx_20 = 0;

        dG_dx[i*21 + 20] =
        herr_0 * dherr_0_dx_20 * -5
        +herr_1 * dherr_1_dx_20 * -5
        +herr_2 * dherr_2_dx_20 * -5
        +herr_3 * dherr_3_dx_20 * -50
        +herr_4 * dherr_4_dx_20 * -50
        +herr_5 * dherr_5_dx_20 * -50
        +herr_6 * dherr_6_dx_20 * -50
        +herr_7 * dherr_7_dx_20 * -50
        +herr_8 * dherr_8_dx_20 * -50
        +herr_9 * dherr_9_dx_20 * -50
        +herr_10 * dherr_10_dx_20 * -50
        +herr_11 * dherr_11_dx_20 * -50
        +herr_12 * dherr_12_dx_20 * -0.02
        +herr_13 * dherr_13_dx_20 * -0.02
        +herr_14 * dherr_14_dx_20 * -0.02;

        REAL_TYPE dherr_0_du_0 = 0;
        REAL_TYPE dherr_1_du_0 = 0;
        REAL_TYPE dherr_2_du_0 = 0;
        REAL_TYPE dherr_3_du_0 = 0;
        REAL_TYPE dherr_4_du_0 = 0;
        REAL_TYPE dherr_5_du_0 = 0;
        REAL_TYPE dherr_6_du_0 = 0;
        REAL_TYPE dherr_7_du_0 = 0;
        REAL_TYPE dherr_8_du_0 = 0;
        REAL_TYPE dherr_9_du_0 = 0;
        REAL_TYPE dherr_10_du_0 = 0;
        REAL_TYPE dherr_11_du_0 = 0;
        REAL_TYPE dherr_12_du_0 = 1;
        REAL_TYPE dherr_13_du_0 = 0;
        REAL_TYPE dherr_14_du_0 = 0;

        dG_du[i*3 + 0] =
        herr_0 * dherr_0_du_0 * -5
        +herr_1 * dherr_1_du_0 * -5
        +herr_2 * dherr_2_du_0 * -5
        +herr_3 * dherr_3_du_0 * -50
        +herr_4 * dherr_4_du_0 * -50
        +herr_5 * dherr_5_du_0 * -50
        +herr_6 * dherr_6_du_0 * -50
        +herr_7 * dherr_7_du_0 * -50
        +herr_8 * dherr_8_du_0 * -50
        +herr_9 * dherr_9_du_0 * -50
        +herr_10 * dherr_10_du_0 * -50
        +herr_11 * dherr_11_du_0 * -50
        +herr_12 * dherr_12_du_0 * -0.02
        +herr_13 * dherr_13_du_0 * -0.02
        +herr_14 * dherr_14_du_0 * -0.02;

        REAL_TYPE dherr_0_du_1 = 0;
        REAL_TYPE dherr_1_du_1 = 0;
        REAL_TYPE dherr_2_du_1 = 0;
        REAL_TYPE dherr_3_du_1 = 0;
        REAL_TYPE dherr_4_du_1 = 0;
        REAL_TYPE dherr_5_du_1 = 0;
        REAL_TYPE dherr_6_du_1 = 0;
        REAL_TYPE dherr_7_du_1 = 0;
        REAL_TYPE dherr_8_du_1 = 0;
        REAL_TYPE dherr_9_du_1 = 0;
        REAL_TYPE dherr_10_du_1 = 0;
        REAL_TYPE dherr_11_du_1 = 0;
        REAL_TYPE dherr_12_du_1 = 0;
        REAL_TYPE dherr_13_du_1 = 1;
        REAL_TYPE dherr_14_du_1 = 0;

        dG_du[i*3 + 1] =
        herr_0 * dherr_0_du_1 * -5
        +herr_1 * dherr_1_du_1 * -5
        +herr_2 * dherr_2_du_1 * -5
        +herr_3 * dherr_3_du_1 * -50
        +herr_4 * dherr_4_du_1 * -50
        +herr_5 * dherr_5_du_1 * -50
        +herr_6 * dherr_6_du_1 * -50
        +herr_7 * dherr_7_du_1 * -50
        +herr_8 * dherr_8_du_1 * -50
        +herr_9 * dherr_9_du_1 * -50
        +herr_10 * dherr_10_du_1 * -50
        +herr_11 * dherr_11_du_1 * -50
        +herr_12 * dherr_12_du_1 * -0.02
        +herr_13 * dherr_13_du_1 * -0.02
        +herr_14 * dherr_14_du_1 * -0.02;

        REAL_TYPE dherr_0_du_2 = 0;
        REAL_TYPE dherr_1_du_2 = 0;
        REAL_TYPE dherr_2_du_2 = 0;
        REAL_TYPE dherr_3_du_2 = 0;
        REAL_TYPE dherr_4_du_2 = 0;
        REAL_TYPE dherr_5_du_2 = 0;
        REAL_TYPE dherr_6_du_2 = 0;
        REAL_TYPE dherr_7_du_2 = 0;
        REAL_TYPE dherr_8_du_2 = 0;
        REAL_TYPE dherr_9_du_2 = 0;
        REAL_TYPE dherr_10_du_2 = 0;
        REAL_TYPE dherr_11_du_2 = 0;
        REAL_TYPE dherr_12_du_2 = 0;
        REAL_TYPE dherr_13_du_2 = 0;
        REAL_TYPE dherr_14_du_2 = 1;

        dG_du[i*3 + 2] =
        herr_0 * dherr_0_du_2 * -5
        +herr_1 * dherr_1_du_2 * -5
        +herr_2 * dherr_2_du_2 * -5
        +herr_3 * dherr_3_du_2 * -50
        +herr_4 * dherr_4_du_2 * -50
        +herr_5 * dherr_5_du_2 * -50
        +herr_6 * dherr_6_du_2 * -50
        +herr_7 * dherr_7_du_2 * -50
        +herr_8 * dherr_8_du_2 * -50
        +herr_9 * dherr_9_du_2 * -50
        +herr_10 * dherr_10_du_2 * -50
        +herr_11 * dherr_11_du_2 * -50
        +herr_12 * dherr_12_du_2 * -0.02
        +herr_13 * dherr_13_du_2 * -0.02
        +herr_14 * dherr_14_du_2 * -0.02;

    }


    REAL_TYPE herr_end_0 = (x_9 - 7.5) - h_ref_end[0];
    REAL_TYPE herr_end_1 = x_10 - h_ref_end[1];
    REAL_TYPE herr_end_2 = x_11 - h_ref_end[2];

    objective += herr_end_0 * herr_end_0 * 2.5;
    objective += herr_end_1 * herr_end_1 * 2.5;
    objective += herr_end_2 * herr_end_2 * 2.5;

    REAL_TYPE dherr_end_0_dx_0 = 0;
    REAL_TYPE dherr_end_1_dx_0 = 0;
    REAL_TYPE dherr_end_2_dx_0 = 0;

    dG_dx[(this->numSteps-1)*this->numStates + 0] +=
    herr_end_0 * dherr_end_0_dx_0 * -5
    +herr_end_1 * dherr_end_1_dx_0 * -5
    +herr_end_2 * dherr_end_2_dx_0 * -5;

    REAL_TYPE dherr_end_0_dx_1 = 0;
    REAL_TYPE dherr_end_1_dx_1 = 0;
    REAL_TYPE dherr_end_2_dx_1 = 0;

    dG_dx[(this->numSteps-1)*this->numStates + 1] +=
    herr_end_0 * dherr_end_0_dx_1 * -5
    +herr_end_1 * dherr_end_1_dx_1 * -5
    +herr_end_2 * dherr_end_2_dx_1 * -5;

    REAL_TYPE dherr_end_0_dx_2 = 0;
    REAL_TYPE dherr_end_1_dx_2 = 0;
    REAL_TYPE dherr_end_2_dx_2 = 0;

    dG_dx[(this->numSteps-1)*this->numStates + 2] +=
    herr_end_0 * dherr_end_0_dx_2 * -5
    +herr_end_1 * dherr_end_1_dx_2 * -5
    +herr_end_2 * dherr_end_2_dx_2 * -5;

    REAL_TYPE dherr_end_0_dx_3 = 0;
    REAL_TYPE dherr_end_1_dx_3 = 0;
    REAL_TYPE dherr_end_2_dx_3 = 0;

    dG_dx[(this->numSteps-1)*this->numStates + 3] +=
    herr_end_0 * dherr_end_0_dx_3 * -5
    +herr_end_1 * dherr_end_1_dx_3 * -5
    +herr_end_2 * dherr_end_2_dx_3 * -5;

    REAL_TYPE dherr_end_0_dx_4 = 0;
    REAL_TYPE dherr_end_1_dx_4 = 0;
    REAL_TYPE dherr_end_2_dx_4 = 0;

    dG_dx[(this->numSteps-1)*this->numStates + 4] +=
    herr_end_0 * dherr_end_0_dx_4 * -5
    +herr_end_1 * dherr_end_1_dx_4 * -5
    +herr_end_2 * dherr_end_2_dx_4 * -5;

    REAL_TYPE dherr_end_0_dx_5 = 0;
    REAL_TYPE dherr_end_1_dx_5 = 0;
    REAL_TYPE dherr_end_2_dx_5 = 0;

    dG_dx[(this->numSteps-1)*this->numStates + 5] +=
    herr_end_0 * dherr_end_0_dx_5 * -5
    +herr_end_1 * dherr_end_1_dx_5 * -5
    +herr_end_2 * dherr_end_2_dx_5 * -5;

    REAL_TYPE dherr_end_0_dx_6 = 0;
    REAL_TYPE dherr_end_1_dx_6 = 0;
    REAL_TYPE dherr_end_2_dx_6 = 0;

    dG_dx[(this->numSteps-1)*this->numStates + 6] +=
    herr_end_0 * dherr_end_0_dx_6 * -5
    +herr_end_1 * dherr_end_1_dx_6 * -5
    +herr_end_2 * dherr_end_2_dx_6 * -5;

    REAL_TYPE dherr_end_0_dx_7 = 0;
    REAL_TYPE dherr_end_1_dx_7 = 0;
    REAL_TYPE dherr_end_2_dx_7 = 0;

    dG_dx[(this->numSteps-1)*this->numStates + 7] +=
    herr_end_0 * dherr_end_0_dx_7 * -5
    +herr_end_1 * dherr_end_1_dx_7 * -5
    +herr_end_2 * dherr_end_2_dx_7 * -5;

    REAL_TYPE dherr_end_0_dx_8 = 0;
    REAL_TYPE dherr_end_1_dx_8 = 0;
    REAL_TYPE dherr_end_2_dx_8 = 0;

    dG_dx[(this->numSteps-1)*this->numStates + 8] +=
    herr_end_0 * dherr_end_0_dx_8 * -5
    +herr_end_1 * dherr_end_1_dx_8 * -5
    +herr_end_2 * dherr_end_2_dx_8 * -5;

    REAL_TYPE dherr_end_0_dx_9 = 1;
    REAL_TYPE dherr_end_1_dx_9 = 0;
    REAL_TYPE dherr_end_2_dx_9 = 0;

    dG_dx[(this->numSteps-1)*this->numStates + 9] +=
    herr_end_0 * dherr_end_0_dx_9 * -5
    +herr_end_1 * dherr_end_1_dx_9 * -5
    +herr_end_2 * dherr_end_2_dx_9 * -5;

    REAL_TYPE dherr_end_0_dx_10 = 0;
    REAL_TYPE dherr_end_1_dx_10 = 1;
    REAL_TYPE dherr_end_2_dx_10 = 0;

    dG_dx[(this->numSteps-1)*this->numStates + 10] +=
    herr_end_0 * dherr_end_0_dx_10 * -5
    +herr_end_1 * dherr_end_1_dx_10 * -5
    +herr_end_2 * dherr_end_2_dx_10 * -5;

    REAL_TYPE dherr_end_0_dx_11 = 0;
    REAL_TYPE dherr_end_1_dx_11 = 0;
    REAL_TYPE dherr_end_2_dx_11 = 1;

    dG_dx[(this->numSteps-1)*this->numStates + 11] +=
    herr_end_0 * dherr_end_0_dx_11 * -5
    +herr_end_1 * dherr_end_1_dx_11 * -5
    +herr_end_2 * dherr_end_2_dx_11 * -5;

    REAL_TYPE dherr_end_0_dx_12 = 0;
    REAL_TYPE dherr_end_1_dx_12 = 0;
    REAL_TYPE dherr_end_2_dx_12 = 0;

    dG_dx[(this->numSteps-1)*this->numStates + 12] +=
    herr_end_0 * dherr_end_0_dx_12 * -5
    +herr_end_1 * dherr_end_1_dx_12 * -5
    +herr_end_2 * dherr_end_2_dx_12 * -5;

    REAL_TYPE dherr_end_0_dx_13 = 0;
    REAL_TYPE dherr_end_1_dx_13 = 0;
    REAL_TYPE dherr_end_2_dx_13 = 0;

    dG_dx[(this->numSteps-1)*this->numStates + 13] +=
    herr_end_0 * dherr_end_0_dx_13 * -5
    +herr_end_1 * dherr_end_1_dx_13 * -5
    +herr_end_2 * dherr_end_2_dx_13 * -5;

    REAL_TYPE dherr_end_0_dx_14 = 0;
    REAL_TYPE dherr_end_1_dx_14 = 0;
    REAL_TYPE dherr_end_2_dx_14 = 0;

    dG_dx[(this->numSteps-1)*this->numStates + 14] +=
    herr_end_0 * dherr_end_0_dx_14 * -5
    +herr_end_1 * dherr_end_1_dx_14 * -5
    +herr_end_2 * dherr_end_2_dx_14 * -5;

    REAL_TYPE dherr_end_0_dx_15 = 0;
    REAL_TYPE dherr_end_1_dx_15 = 0;
    REAL_TYPE dherr_end_2_dx_15 = 0;

    dG_dx[(this->numSteps-1)*this->numStates + 15] +=
    herr_end_0 * dherr_end_0_dx_15 * -5
    +herr_end_1 * dherr_end_1_dx_15 * -5
    +herr_end_2 * dherr_end_2_dx_15 * -5;

    REAL_TYPE dherr_end_0_dx_16 = 0;
    REAL_TYPE dherr_end_1_dx_16 = 0;
    REAL_TYPE dherr_end_2_dx_16 = 0;

    dG_dx[(this->numSteps-1)*this->numStates + 16] +=
    herr_end_0 * dherr_end_0_dx_16 * -5
    +herr_end_1 * dherr_end_1_dx_16 * -5
    +herr_end_2 * dherr_end_2_dx_16 * -5;

    REAL_TYPE dherr_end_0_dx_17 = 0;
    REAL_TYPE dherr_end_1_dx_17 = 0;
    REAL_TYPE dherr_end_2_dx_17 = 0;

    dG_dx[(this->numSteps-1)*this->numStates + 17] +=
    herr_end_0 * dherr_end_0_dx_17 * -5
    +herr_end_1 * dherr_end_1_dx_17 * -5
    +herr_end_2 * dherr_end_2_dx_17 * -5;

    REAL_TYPE dherr_end_0_dx_18 = 0;
    REAL_TYPE dherr_end_1_dx_18 = 0;
    REAL_TYPE dherr_end_2_dx_18 = 0;

    dG_dx[(this->numSteps-1)*this->numStates + 18] +=
    herr_end_0 * dherr_end_0_dx_18 * -5
    +herr_end_1 * dherr_end_1_dx_18 * -5
    +herr_end_2 * dherr_end_2_dx_18 * -5;

    REAL_TYPE dherr_end_0_dx_19 = 0;
    REAL_TYPE dherr_end_1_dx_19 = 0;
    REAL_TYPE dherr_end_2_dx_19 = 0;

    dG_dx[(this->numSteps-1)*this->numStates + 19] +=
    herr_end_0 * dherr_end_0_dx_19 * -5
    +herr_end_1 * dherr_end_1_dx_19 * -5
    +herr_end_2 * dherr_end_2_dx_19 * -5;

    REAL_TYPE dherr_end_0_dx_20 = 0;
    REAL_TYPE dherr_end_1_dx_20 = 0;
    REAL_TYPE dherr_end_2_dx_20 = 0;

    dG_dx[(this->numSteps-1)*this->numStates + 20] +=
    herr_end_0 * dherr_end_0_dx_20 * -5
    +herr_end_1 * dherr_end_1_dx_20 * -5
    +herr_end_2 * dherr_end_2_dx_20 * -5;

    REAL_TYPE dherr_end_0_du_0 = 0;
    REAL_TYPE dherr_end_1_du_0 = 0;
    REAL_TYPE dherr_end_2_du_0 = 0;

    dG_du[(this->numSteps-1)*this->numControls + 0] +=
    herr_end_0 * dherr_end_0_du_0 * -5
    +herr_end_1 * dherr_end_1_du_0 * -5
    +herr_end_2 * dherr_end_2_du_0 * -5;

    REAL_TYPE dherr_end_0_du_1 = 0;
    REAL_TYPE dherr_end_1_du_1 = 0;
    REAL_TYPE dherr_end_2_du_1 = 0;

    dG_du[(this->numSteps-1)*this->numControls + 1] +=
    herr_end_0 * dherr_end_0_du_1 * -5
    +herr_end_1 * dherr_end_1_du_1 * -5
    +herr_end_2 * dherr_end_2_du_1 * -5;

    REAL_TYPE dherr_end_0_du_2 = 0;
    REAL_TYPE dherr_end_1_du_2 = 0;
    REAL_TYPE dherr_end_2_du_2 = 0;

    dG_du[(this->numSteps-1)*this->numControls + 2] +=
    herr_end_0 * dherr_end_0_du_2 * -5
    +herr_end_1 * dherr_end_1_du_2 * -5
    +herr_end_2 * dherr_end_2_du_2 * -5;

    return objective;
}

